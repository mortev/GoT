//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "HouseCharacter", "House", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.House), "Character", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Character))]
[assembly: EdmRelationshipAttribute("Model", "GameRound", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Game), "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Round))]
[assembly: EdmRelationshipAttribute("Model", "GameGamePlayer", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Game), "GamePlayer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.GamePlayer))]
[assembly: EdmRelationshipAttribute("Model", "RegionRegionStatus", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Region), "RegionStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.RegionStatus))]
[assembly: EdmRelationshipAttribute("Model", "RoundRegionStatus", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Round), "RegionStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.RegionStatus))]
[assembly: EdmRelationshipAttribute("Model", "RoundMove", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Round), "Move", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Move))]
[assembly: EdmRelationshipAttribute("Model", "RoundInfluenceTrackStatus", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Round), "InfluenceTrackStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.InfluenceTrackStatus))]
[assembly: EdmRelationshipAttribute("Model", "GameGameResult", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Game), "GameResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.GameResult))]
[assembly: EdmRelationshipAttribute("Model", "GamePlayerGameResult", "GamePlayer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.GamePlayer), "GameResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.GameResult))]
[assembly: EdmRelationshipAttribute("Model", "RegionPort", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Region), "Port", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GoT.Data.Port))]
[assembly: EdmRelationshipAttribute("Model", "RegionRegionRelationship", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Region), "RegionRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.RegionRelationship))]
[assembly: EdmRelationshipAttribute("Model", "RegionStatusPort", "RegionStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.RegionStatus), "Port", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GoT.Data.Port))]
[assembly: EdmRelationshipAttribute("Model", "TriviaTriviaAlternative", "Trivia", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Trivia), "TriviaAlternative", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.TriviaAlternative))]
[assembly: EdmRelationshipAttribute("Model", "HouseHouseCard", "House", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.House), "HouseCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.HouseCard))]
[assembly: EdmRelationshipAttribute("Model", "PlayerPlayerTrophy", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Player), "PlayerTrophy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.PlayerTrophy))]
[assembly: EdmRelationshipAttribute("Model", "TrophyPlayerTrophy", "Trophy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Trophy), "PlayerTrophy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.PlayerTrophy))]
[assembly: EdmRelationshipAttribute("Model", "RegionRelationshipRelationshipBridge", "RegionRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.RegionRelationship), "RelationshipBridge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.RelationshipBridge))]
[assembly: EdmRelationshipAttribute("Model", "RoundWesterosCardStatus", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Round), "WesterosCardStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.WesterosCardStatus))]
[assembly: EdmRelationshipAttribute("Model", "GamePlayerHouseCardStatus", "GamePlayer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.GamePlayer), "HouseCardStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.HouseCardStatus))]

#endregion

namespace GoT.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GoTDataContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GoTDataContext object using the connection string found in the 'GoTDataContext' section of the application configuration file.
        /// </summary>
        public GoTDataContext() : base("name=GoTDataContext", "GoTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GoTDataContext object.
        /// </summary>
        public GoTDataContext(string connectionString) : base(connectionString, "GoTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GoTDataContext object.
        /// </summary>
        public GoTDataContext(EntityConnection connection) : base(connection, "GoTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<House> Houses
        {
            get
            {
                if ((_Houses == null))
                {
                    _Houses = base.CreateObjectSet<House>("Houses");
                }
                return _Houses;
            }
        }
        private ObjectSet<House> _Houses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Character> Characters
        {
            get
            {
                if ((_Characters == null))
                {
                    _Characters = base.CreateObjectSet<Character>("Characters");
                }
                return _Characters;
            }
        }
        private ObjectSet<Character> _Characters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HouseCard> HouseCards
        {
            get
            {
                if ((_HouseCards == null))
                {
                    _HouseCards = base.CreateObjectSet<HouseCard>("HouseCards");
                }
                return _HouseCards;
            }
        }
        private ObjectSet<HouseCard> _HouseCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trophy> Trophys
        {
            get
            {
                if ((_Trophys == null))
                {
                    _Trophys = base.CreateObjectSet<Trophy>("Trophys");
                }
                return _Trophys;
            }
        }
        private ObjectSet<Trophy> _Trophys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Round> Rounds
        {
            get
            {
                if ((_Rounds == null))
                {
                    _Rounds = base.CreateObjectSet<Round>("Rounds");
                }
                return _Rounds;
            }
        }
        private ObjectSet<Round> _Rounds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegionStatus> RegionStatuses
        {
            get
            {
                if ((_RegionStatuses == null))
                {
                    _RegionStatuses = base.CreateObjectSet<RegionStatus>("RegionStatuses");
                }
                return _RegionStatuses;
            }
        }
        private ObjectSet<RegionStatus> _RegionStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Move> Moves
        {
            get
            {
                if ((_Moves == null))
                {
                    _Moves = base.CreateObjectSet<Move>("Moves");
                }
                return _Moves;
            }
        }
        private ObjectSet<Move> _Moves;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfluenceTrackStatus> InfluenceTrackStatuses
        {
            get
            {
                if ((_InfluenceTrackStatuses == null))
                {
                    _InfluenceTrackStatuses = base.CreateObjectSet<InfluenceTrackStatus>("InfluenceTrackStatuses");
                }
                return _InfluenceTrackStatuses;
            }
        }
        private ObjectSet<InfluenceTrackStatus> _InfluenceTrackStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GamePlayer> GamePlayers
        {
            get
            {
                if ((_GamePlayers == null))
                {
                    _GamePlayers = base.CreateObjectSet<GamePlayer>("GamePlayers");
                }
                return _GamePlayers;
            }
        }
        private ObjectSet<GamePlayer> _GamePlayers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameResult> GameResults
        {
            get
            {
                if ((_GameResults == null))
                {
                    _GameResults = base.CreateObjectSet<GameResult>("GameResults");
                }
                return _GameResults;
            }
        }
        private ObjectSet<GameResult> _GameResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Port> Ports
        {
            get
            {
                if ((_Ports == null))
                {
                    _Ports = base.CreateObjectSet<Port>("Ports");
                }
                return _Ports;
            }
        }
        private ObjectSet<Port> _Ports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegionRelationship> RegionRelationships
        {
            get
            {
                if ((_RegionRelationships == null))
                {
                    _RegionRelationships = base.CreateObjectSet<RegionRelationship>("RegionRelationships");
                }
                return _RegionRelationships;
            }
        }
        private ObjectSet<RegionRelationship> _RegionRelationships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trivia> Trivias
        {
            get
            {
                if ((_Trivias == null))
                {
                    _Trivias = base.CreateObjectSet<Trivia>("Trivias");
                }
                return _Trivias;
            }
        }
        private ObjectSet<Trivia> _Trivias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DidYouKnow> DidYouKnows
        {
            get
            {
                if ((_DidYouKnows == null))
                {
                    _DidYouKnows = base.CreateObjectSet<DidYouKnow>("DidYouKnows");
                }
                return _DidYouKnows;
            }
        }
        private ObjectSet<DidYouKnow> _DidYouKnows;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TriviaAlternative> TriviaAlternatives
        {
            get
            {
                if ((_TriviaAlternatives == null))
                {
                    _TriviaAlternatives = base.CreateObjectSet<TriviaAlternative>("TriviaAlternatives");
                }
                return _TriviaAlternatives;
            }
        }
        private ObjectSet<TriviaAlternative> _TriviaAlternatives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerTrophy> PlayerTrophies
        {
            get
            {
                if ((_PlayerTrophies == null))
                {
                    _PlayerTrophies = base.CreateObjectSet<PlayerTrophy>("PlayerTrophies");
                }
                return _PlayerTrophies;
            }
        }
        private ObjectSet<PlayerTrophy> _PlayerTrophies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelationshipBridge> RelationshipBridges
        {
            get
            {
                if ((_RelationshipBridges == null))
                {
                    _RelationshipBridges = base.CreateObjectSet<RelationshipBridge>("RelationshipBridges");
                }
                return _RelationshipBridges;
            }
        }
        private ObjectSet<RelationshipBridge> _RelationshipBridges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WesterosCardStatus> WesterosCardStatuses
        {
            get
            {
                if ((_WesterosCardStatuses == null))
                {
                    _WesterosCardStatuses = base.CreateObjectSet<WesterosCardStatus>("WesterosCardStatuses");
                }
                return _WesterosCardStatuses;
            }
        }
        private ObjectSet<WesterosCardStatus> _WesterosCardStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WesterosCard> WesterosCards
        {
            get
            {
                if ((_WesterosCards == null))
                {
                    _WesterosCards = base.CreateObjectSet<WesterosCard>("WesterosCards");
                }
                return _WesterosCards;
            }
        }
        private ObjectSet<WesterosCard> _WesterosCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HouseCardStatus> HouseCardStatuses
        {
            get
            {
                if ((_HouseCardStatuses == null))
                {
                    _HouseCardStatuses = base.CreateObjectSet<HouseCardStatus>("HouseCardStatuses");
                }
                return _HouseCardStatuses;
            }
        }
        private ObjectSet<HouseCardStatus> _HouseCardStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorLog> ErrorLogs
        {
            get
            {
                if ((_ErrorLogs == null))
                {
                    _ErrorLogs = base.CreateObjectSet<ErrorLog>("ErrorLogs");
                }
                return _ErrorLogs;
            }
        }
        private ObjectSet<ErrorLog> _ErrorLogs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Houses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHouses(House house)
        {
            base.AddObject("Houses", house);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Characters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCharacters(Character character)
        {
            base.AddObject("Characters", character);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HouseCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHouseCards(HouseCard houseCard)
        {
            base.AddObject("HouseCards", houseCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trophys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrophys(Trophy trophy)
        {
            base.AddObject("Trophys", trophy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRounds(Round round)
        {
            base.AddObject("Rounds", round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionStatuses(RegionStatus regionStatus)
        {
            base.AddObject("RegionStatuses", regionStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Moves EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMoves(Move move)
        {
            base.AddObject("Moves", move);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfluenceTrackStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfluenceTrackStatuses(InfluenceTrackStatus influenceTrackStatus)
        {
            base.AddObject("InfluenceTrackStatuses", influenceTrackStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GamePlayers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGamePlayers(GamePlayer gamePlayer)
        {
            base.AddObject("GamePlayers", gamePlayer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameResults(GameResult gameResult)
        {
            base.AddObject("GameResults", gameResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPorts(Port port)
        {
            base.AddObject("Ports", port);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionRelationships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionRelationships(RegionRelationship regionRelationship)
        {
            base.AddObject("RegionRelationships", regionRelationship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trivias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrivias(Trivia trivia)
        {
            base.AddObject("Trivias", trivia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DidYouKnows EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDidYouKnows(DidYouKnow didYouKnow)
        {
            base.AddObject("DidYouKnows", didYouKnow);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TriviaAlternatives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTriviaAlternatives(TriviaAlternative triviaAlternative)
        {
            base.AddObject("TriviaAlternatives", triviaAlternative);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerTrophies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerTrophies(PlayerTrophy playerTrophy)
        {
            base.AddObject("PlayerTrophies", playerTrophy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelationshipBridges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelationshipBridges(RelationshipBridge relationshipBridge)
        {
            base.AddObject("RelationshipBridges", relationshipBridge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WesterosCardStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWesterosCardStatuses(WesterosCardStatus westerosCardStatus)
        {
            base.AddObject("WesterosCardStatuses", westerosCardStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WesterosCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWesterosCards(WesterosCard westerosCard)
        {
            base.AddObject("WesterosCards", westerosCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HouseCardStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHouseCardStatuses(HouseCardStatus houseCardStatus)
        {
            base.AddObject("HouseCardStatuses", houseCardStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorLogs(ErrorLog errorLog)
        {
            base.AddObject("ErrorLogs", errorLog);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Character")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Character : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Character object.
        /// </summary>
        /// <param name="characterId">Initial value of the CharacterId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        public static Character CreateCharacter(global::System.Int32 characterId, global::System.String firstName, global::System.String lastName, global::System.String gender)
        {
            Character character = new Character();
            character.CharacterId = characterId;
            character.FirstName = firstName;
            character.LastName = lastName;
            character.Gender = gender;
            return character;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CharacterId
        {
            get
            {
                return _CharacterId;
            }
            set
            {
                if (_CharacterId != value)
                {
                    OnCharacterIdChanging(value);
                    ReportPropertyChanging("CharacterId");
                    _CharacterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CharacterId");
                    OnCharacterIdChanged();
                }
            }
        }
        private global::System.Int32 _CharacterId;
        partial void OnCharacterIdChanging(global::System.Int32 value);
        partial void OnCharacterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "HouseCharacter", "House")]
        public House House
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseCharacter", "House").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseCharacter", "House").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<House> HouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseCharacter", "House");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<House>("Model.HouseCharacter", "House", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="DidYouKnow")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DidYouKnow : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DidYouKnow object.
        /// </summary>
        /// <param name="didYouKnowId">Initial value of the DidYouKnowId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static DidYouKnow CreateDidYouKnow(global::System.Int32 didYouKnowId, global::System.String text)
        {
            DidYouKnow didYouKnow = new DidYouKnow();
            didYouKnow.DidYouKnowId = didYouKnowId;
            didYouKnow.Text = text;
            return didYouKnow;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DidYouKnowId
        {
            get
            {
                return _DidYouKnowId;
            }
            set
            {
                if (_DidYouKnowId != value)
                {
                    OnDidYouKnowIdChanging(value);
                    ReportPropertyChanging("DidYouKnowId");
                    _DidYouKnowId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DidYouKnowId");
                    OnDidYouKnowIdChanged();
                }
            }
        }
        private global::System.Int32 _DidYouKnowId;
        partial void OnDidYouKnowIdChanging(global::System.Int32 value);
        partial void OnDidYouKnowIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorLog object.
        /// </summary>
        /// <param name="errorLogId">Initial value of the ErrorLogId property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="errorMessage">Initial value of the ErrorMessage property.</param>
        /// <param name="method">Initial value of the Method property.</param>
        public static ErrorLog CreateErrorLog(global::System.Int64 errorLogId, global::System.DateTime timestamp, global::System.String errorMessage, global::System.String method)
        {
            ErrorLog errorLog = new ErrorLog();
            errorLog.ErrorLogId = errorLogId;
            errorLog.Timestamp = timestamp;
            errorLog.ErrorMessage = errorMessage;
            errorLog.Method = method;
            return errorLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ErrorLogId
        {
            get
            {
                return _ErrorLogId;
            }
            set
            {
                if (_ErrorLogId != value)
                {
                    OnErrorLogIdChanging(value);
                    ReportPropertyChanging("ErrorLogId");
                    _ErrorLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ErrorLogId");
                    OnErrorLogIdChanged();
                }
            }
        }
        private global::System.Int64 _ErrorLogId;
        partial void OnErrorLogIdChanging(global::System.Int64 value);
        partial void OnErrorLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorCode
        {
            get
            {
                return _ErrorCode;
            }
            set
            {
                OnErrorCodeChanging(value);
                ReportPropertyChanging("ErrorCode");
                _ErrorCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorCode");
                OnErrorCodeChanged();
            }
        }
        private global::System.String _ErrorCode;
        partial void OnErrorCodeChanging(global::System.String value);
        partial void OnErrorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StackTrace
        {
            get
            {
                return _StackTrace;
            }
            set
            {
                OnStackTraceChanging(value);
                ReportPropertyChanging("StackTrace");
                _StackTrace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StackTrace");
                OnStackTraceChanged();
            }
        }
        private global::System.String _StackTrace;
        partial void OnStackTraceChanging(global::System.String value);
        partial void OnStackTraceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="gameId">Initial value of the GameId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="mode">Initial value of the Mode property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdByPlayerId">Initial value of the CreatedByPlayerId property.</param>
        public static Game CreateGame(global::System.Int32 gameId, global::System.DateTime date, global::System.String mode, global::System.String status, global::System.DateTime createdDate, global::System.Int32 createdByPlayerId)
        {
            Game game = new Game();
            game.GameId = gameId;
            game.Date = date;
            game.Mode = mode;
            game.Status = status;
            game.CreatedDate = createdDate;
            game.CreatedByPlayerId = createdByPlayerId;
            return game;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Int32 _GameId;
        partial void OnGameIdChanging(global::System.Int32 value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.String _Mode;
        partial void OnModeChanging(global::System.String value);
        partial void OnModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByPlayerId
        {
            get
            {
                return _CreatedByPlayerId;
            }
            set
            {
                OnCreatedByPlayerIdChanging(value);
                ReportPropertyChanging("CreatedByPlayerId");
                _CreatedByPlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByPlayerId");
                OnCreatedByPlayerIdChanged();
            }
        }
        private global::System.Int32 _CreatedByPlayerId;
        partial void OnCreatedByPlayerIdChanging(global::System.Int32 value);
        partial void OnCreatedByPlayerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameRound", "Round")]
        public EntityCollection<Round> Rounds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Round>("Model.GameRound", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Round>("Model.GameRound", "Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameGamePlayer", "GamePlayer")]
        public EntityCollection<GamePlayer> GamePlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GamePlayer>("Model.GameGamePlayer", "GamePlayer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GamePlayer>("Model.GameGamePlayer", "GamePlayer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameGameResult", "GameResult")]
        public EntityCollection<GameResult> GameResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameResult>("Model.GameGameResult", "GameResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameResult>("Model.GameGameResult", "GameResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GamePlayer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GamePlayer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GamePlayer object.
        /// </summary>
        /// <param name="gamePlayerId">Initial value of the GamePlayerId property.</param>
        /// <param name="houseId">Initial value of the HouseId property.</param>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        public static GamePlayer CreateGamePlayer(global::System.Int32 gamePlayerId, global::System.Int64 houseId, global::System.Int64 playerId)
        {
            GamePlayer gamePlayer = new GamePlayer();
            gamePlayer.GamePlayerId = gamePlayerId;
            gamePlayer.HouseId = houseId;
            gamePlayer.PlayerId = playerId;
            return gamePlayer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamePlayerId
        {
            get
            {
                return _GamePlayerId;
            }
            set
            {
                if (_GamePlayerId != value)
                {
                    OnGamePlayerIdChanging(value);
                    ReportPropertyChanging("GamePlayerId");
                    _GamePlayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GamePlayerId");
                    OnGamePlayerIdChanged();
                }
            }
        }
        private global::System.Int32 _GamePlayerId;
        partial void OnGamePlayerIdChanging(global::System.Int32 value);
        partial void OnGamePlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HouseId
        {
            get
            {
                return _HouseId;
            }
            set
            {
                OnHouseIdChanging(value);
                ReportPropertyChanging("HouseId");
                _HouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HouseId");
                OnHouseIdChanged();
            }
        }
        private global::System.Int64 _HouseId;
        partial void OnHouseIdChanging(global::System.Int64 value);
        partial void OnHouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private global::System.Int64 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int64 value);
        partial void OnPlayerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameGamePlayer", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameGamePlayer", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameGamePlayer", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameGamePlayer", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("Model.GameGamePlayer", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GamePlayerHouseCardStatus", "HouseCardStatus")]
        public EntityCollection<HouseCardStatus> HouseCardStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HouseCardStatus>("Model.GamePlayerHouseCardStatus", "HouseCardStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HouseCardStatus>("Model.GamePlayerHouseCardStatus", "HouseCardStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GameResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameResult object.
        /// </summary>
        /// <param name="gameResultId">Initial value of the GameResultId property.</param>
        /// <param name="place">Initial value of the Place property.</param>
        public static GameResult CreateGameResult(global::System.Int32 gameResultId, global::System.Int32 place)
        {
            GameResult gameResult = new GameResult();
            gameResult.GameResultId = gameResultId;
            gameResult.Place = place;
            return gameResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameResultId
        {
            get
            {
                return _GameResultId;
            }
            set
            {
                if (_GameResultId != value)
                {
                    OnGameResultIdChanging(value);
                    ReportPropertyChanging("GameResultId");
                    _GameResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameResultId");
                    OnGameResultIdChanged();
                }
            }
        }
        private global::System.Int32 _GameResultId;
        partial void OnGameResultIdChanging(global::System.Int32 value);
        partial void OnGameResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.Int32 _Place;
        partial void OnPlaceChanging(global::System.Int32 value);
        partial void OnPlaceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GamePlayerGameResult", "GamePlayer")]
        public GamePlayer GamePlayer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePlayer>("Model.GamePlayerGameResult", "GamePlayer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePlayer>("Model.GamePlayerGameResult", "GamePlayer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GamePlayer> GamePlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePlayer>("Model.GamePlayerGameResult", "GamePlayer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GamePlayer>("Model.GamePlayerGameResult", "GamePlayer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="House")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class House : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new House object.
        /// </summary>
        /// <param name="houseId">Initial value of the HouseId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="capitalRegionId">Initial value of the CapitalRegionId property.</param>
        public static House CreateHouse(global::System.Int32 houseId, global::System.String name, global::System.Int32 capitalRegionId)
        {
            House house = new House();
            house.HouseId = houseId;
            house.Name = name;
            house.CapitalRegionId = capitalRegionId;
            return house;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseId
        {
            get
            {
                return _HouseId;
            }
            set
            {
                if (_HouseId != value)
                {
                    OnHouseIdChanging(value);
                    ReportPropertyChanging("HouseId");
                    _HouseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HouseId");
                    OnHouseIdChanged();
                }
            }
        }
        private global::System.Int32 _HouseId;
        partial void OnHouseIdChanging(global::System.Int32 value);
        partial void OnHouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Sigil
        {
            get
            {
                return StructuralObject.GetValidValue(_Sigil);
            }
            set
            {
                OnSigilChanging(value);
                ReportPropertyChanging("Sigil");
                _Sigil = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sigil");
                OnSigilChanged();
            }
        }
        private global::System.Byte[] _Sigil;
        partial void OnSigilChanging(global::System.Byte[] value);
        partial void OnSigilChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalRegionId
        {
            get
            {
                return _CapitalRegionId;
            }
            set
            {
                OnCapitalRegionIdChanging(value);
                ReportPropertyChanging("CapitalRegionId");
                _CapitalRegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalRegionId");
                OnCapitalRegionIdChanged();
            }
        }
        private global::System.Int32 _CapitalRegionId;
        partial void OnCapitalRegionIdChanging(global::System.Int32 value);
        partial void OnCapitalRegionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "HouseCharacter", "Character")]
        public EntityCollection<Character> Characters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("Model.HouseCharacter", "Character");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("Model.HouseCharacter", "Character", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "HouseHouseCard", "HouseCard")]
        public EntityCollection<HouseCard> HouseCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HouseCard>("Model.HouseHouseCard", "HouseCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HouseCard>("Model.HouseHouseCard", "HouseCard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="HouseCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HouseCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HouseCard object.
        /// </summary>
        /// <param name="houseCardId">Initial value of the HouseCardId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="combatStrength">Initial value of the CombatStrength property.</param>
        /// <param name="swordCount">Initial value of the SwordCount property.</param>
        /// <param name="towerCount">Initial value of the TowerCount property.</param>
        /// <param name="characterId">Initial value of the CharacterId property.</param>
        public static HouseCard CreateHouseCard(global::System.Int32 houseCardId, global::System.String description, global::System.Int32 combatStrength, global::System.Int32 swordCount, global::System.Int32 towerCount, global::System.Int32 characterId)
        {
            HouseCard houseCard = new HouseCard();
            houseCard.HouseCardId = houseCardId;
            houseCard.Description = description;
            houseCard.CombatStrength = combatStrength;
            houseCard.SwordCount = swordCount;
            houseCard.TowerCount = towerCount;
            houseCard.CharacterId = characterId;
            return houseCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseCardId
        {
            get
            {
                return _HouseCardId;
            }
            set
            {
                if (_HouseCardId != value)
                {
                    OnHouseCardIdChanging(value);
                    ReportPropertyChanging("HouseCardId");
                    _HouseCardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HouseCardId");
                    OnHouseCardIdChanged();
                }
            }
        }
        private global::System.Int32 _HouseCardId;
        partial void OnHouseCardIdChanging(global::System.Int32 value);
        partial void OnHouseCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CombatStrength
        {
            get
            {
                return _CombatStrength;
            }
            set
            {
                OnCombatStrengthChanging(value);
                ReportPropertyChanging("CombatStrength");
                _CombatStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CombatStrength");
                OnCombatStrengthChanged();
            }
        }
        private global::System.Int32 _CombatStrength;
        partial void OnCombatStrengthChanging(global::System.Int32 value);
        partial void OnCombatStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SwordCount
        {
            get
            {
                return _SwordCount;
            }
            set
            {
                OnSwordCountChanging(value);
                ReportPropertyChanging("SwordCount");
                _SwordCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwordCount");
                OnSwordCountChanged();
            }
        }
        private global::System.Int32 _SwordCount;
        partial void OnSwordCountChanging(global::System.Int32 value);
        partial void OnSwordCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TowerCount
        {
            get
            {
                return _TowerCount;
            }
            set
            {
                OnTowerCountChanging(value);
                ReportPropertyChanging("TowerCount");
                _TowerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TowerCount");
                OnTowerCountChanged();
            }
        }
        private global::System.Int32 _TowerCount;
        partial void OnTowerCountChanging(global::System.Int32 value);
        partial void OnTowerCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CharacterId
        {
            get
            {
                return _CharacterId;
            }
            set
            {
                OnCharacterIdChanging(value);
                ReportPropertyChanging("CharacterId");
                _CharacterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CharacterId");
                OnCharacterIdChanged();
            }
        }
        private global::System.Int32 _CharacterId;
        partial void OnCharacterIdChanging(global::System.Int32 value);
        partial void OnCharacterIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "HouseHouseCard", "House")]
        public House House
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseHouseCard", "House").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseHouseCard", "House").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<House> HouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseHouseCard", "House");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<House>("Model.HouseHouseCard", "House", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="HouseCardStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HouseCardStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HouseCardStatus object.
        /// </summary>
        /// <param name="houseCardStatusId">Initial value of the HouseCardStatusId property.</param>
        /// <param name="houseCardId">Initial value of the HouseCardId property.</param>
        /// <param name="isAvailable">Initial value of the IsAvailable property.</param>
        public static HouseCardStatus CreateHouseCardStatus(global::System.Int32 houseCardStatusId, global::System.Int32 houseCardId, global::System.Boolean isAvailable)
        {
            HouseCardStatus houseCardStatus = new HouseCardStatus();
            houseCardStatus.HouseCardStatusId = houseCardStatusId;
            houseCardStatus.HouseCardId = houseCardId;
            houseCardStatus.IsAvailable = isAvailable;
            return houseCardStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseCardStatusId
        {
            get
            {
                return _HouseCardStatusId;
            }
            set
            {
                if (_HouseCardStatusId != value)
                {
                    OnHouseCardStatusIdChanging(value);
                    ReportPropertyChanging("HouseCardStatusId");
                    _HouseCardStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HouseCardStatusId");
                    OnHouseCardStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _HouseCardStatusId;
        partial void OnHouseCardStatusIdChanging(global::System.Int32 value);
        partial void OnHouseCardStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseCardId
        {
            get
            {
                return _HouseCardId;
            }
            set
            {
                OnHouseCardIdChanging(value);
                ReportPropertyChanging("HouseCardId");
                _HouseCardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HouseCardId");
                OnHouseCardIdChanged();
            }
        }
        private global::System.Int32 _HouseCardId;
        partial void OnHouseCardIdChanging(global::System.Int32 value);
        partial void OnHouseCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAvailable
        {
            get
            {
                return _IsAvailable;
            }
            set
            {
                OnIsAvailableChanging(value);
                ReportPropertyChanging("IsAvailable");
                _IsAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAvailable");
                OnIsAvailableChanged();
            }
        }
        private global::System.Boolean _IsAvailable;
        partial void OnIsAvailableChanging(global::System.Boolean value);
        partial void OnIsAvailableChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="InfluenceTrackStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfluenceTrackStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfluenceTrackStatus object.
        /// </summary>
        /// <param name="influenceTrackId">Initial value of the InfluenceTrackId property.</param>
        /// <param name="ironThronePosition">Initial value of the IronThronePosition property.</param>
        /// <param name="fiefdomPosition">Initial value of the FiefdomPosition property.</param>
        /// <param name="kingsCourtPosition">Initial value of the KingsCourtPosition property.</param>
        /// <param name="gamePlayerId">Initial value of the GamePlayerId property.</param>
        public static InfluenceTrackStatus CreateInfluenceTrackStatus(global::System.Int32 influenceTrackId, global::System.Int32 ironThronePosition, global::System.Int32 fiefdomPosition, global::System.Int32 kingsCourtPosition, global::System.Int32 gamePlayerId)
        {
            InfluenceTrackStatus influenceTrackStatus = new InfluenceTrackStatus();
            influenceTrackStatus.InfluenceTrackId = influenceTrackId;
            influenceTrackStatus.IronThronePosition = ironThronePosition;
            influenceTrackStatus.FiefdomPosition = fiefdomPosition;
            influenceTrackStatus.KingsCourtPosition = kingsCourtPosition;
            influenceTrackStatus.GamePlayerId = gamePlayerId;
            return influenceTrackStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfluenceTrackId
        {
            get
            {
                return _InfluenceTrackId;
            }
            set
            {
                if (_InfluenceTrackId != value)
                {
                    OnInfluenceTrackIdChanging(value);
                    ReportPropertyChanging("InfluenceTrackId");
                    _InfluenceTrackId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfluenceTrackId");
                    OnInfluenceTrackIdChanged();
                }
            }
        }
        private global::System.Int32 _InfluenceTrackId;
        partial void OnInfluenceTrackIdChanging(global::System.Int32 value);
        partial void OnInfluenceTrackIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IronThronePosition
        {
            get
            {
                return _IronThronePosition;
            }
            set
            {
                OnIronThronePositionChanging(value);
                ReportPropertyChanging("IronThronePosition");
                _IronThronePosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IronThronePosition");
                OnIronThronePositionChanged();
            }
        }
        private global::System.Int32 _IronThronePosition;
        partial void OnIronThronePositionChanging(global::System.Int32 value);
        partial void OnIronThronePositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiefdomPosition
        {
            get
            {
                return _FiefdomPosition;
            }
            set
            {
                OnFiefdomPositionChanging(value);
                ReportPropertyChanging("FiefdomPosition");
                _FiefdomPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiefdomPosition");
                OnFiefdomPositionChanged();
            }
        }
        private global::System.Int32 _FiefdomPosition;
        partial void OnFiefdomPositionChanging(global::System.Int32 value);
        partial void OnFiefdomPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KingsCourtPosition
        {
            get
            {
                return _KingsCourtPosition;
            }
            set
            {
                OnKingsCourtPositionChanging(value);
                ReportPropertyChanging("KingsCourtPosition");
                _KingsCourtPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KingsCourtPosition");
                OnKingsCourtPositionChanged();
            }
        }
        private global::System.Int32 _KingsCourtPosition;
        partial void OnKingsCourtPositionChanging(global::System.Int32 value);
        partial void OnKingsCourtPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamePlayerId
        {
            get
            {
                return _GamePlayerId;
            }
            set
            {
                OnGamePlayerIdChanging(value);
                ReportPropertyChanging("GamePlayerId");
                _GamePlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamePlayerId");
                OnGamePlayerIdChanged();
            }
        }
        private global::System.Int32 _GamePlayerId;
        partial void OnGamePlayerIdChanging(global::System.Int32 value);
        partial void OnGamePlayerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundInfluenceTrackStatus", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundInfluenceTrackStatus", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundInfluenceTrackStatus", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundInfluenceTrackStatus", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.RoundInfluenceTrackStatus", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Move")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Move : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Move object.
        /// </summary>
        /// <param name="moveId">Initial value of the MoveId property.</param>
        /// <param name="attackerFootmanCount">Initial value of the AttackerFootmanCount property.</param>
        /// <param name="attackerKnightCount">Initial value of the AttackerKnightCount property.</param>
        /// <param name="attackerShipCount">Initial value of the AttackerShipCount property.</param>
        /// <param name="attackerSiegeCount">Initial value of the AttackerSiegeCount property.</param>
        /// <param name="attackerVictory">Initial value of the AttackerVictory property.</param>
        /// <param name="gamePlayerId">Initial value of the GamePlayerId property.</param>
        /// <param name="fromRegionId">Initial value of the FromRegionId property.</param>
        /// <param name="toRegionId">Initial value of the ToRegionId property.</param>
        public static Move CreateMove(global::System.Int32 moveId, global::System.Int32 attackerFootmanCount, global::System.Int32 attackerKnightCount, global::System.Int32 attackerShipCount, global::System.Int32 attackerSiegeCount, global::System.Boolean attackerVictory, global::System.Int32 gamePlayerId, global::System.Int32 fromRegionId, global::System.Int32 toRegionId)
        {
            Move move = new Move();
            move.MoveId = moveId;
            move.AttackerFootmanCount = attackerFootmanCount;
            move.AttackerKnightCount = attackerKnightCount;
            move.AttackerShipCount = attackerShipCount;
            move.AttackerSiegeCount = attackerSiegeCount;
            move.AttackerVictory = attackerVictory;
            move.GamePlayerId = gamePlayerId;
            move.FromRegionId = fromRegionId;
            move.ToRegionId = toRegionId;
            return move;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MoveId
        {
            get
            {
                return _MoveId;
            }
            set
            {
                if (_MoveId != value)
                {
                    OnMoveIdChanging(value);
                    ReportPropertyChanging("MoveId");
                    _MoveId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MoveId");
                    OnMoveIdChanged();
                }
            }
        }
        private global::System.Int32 _MoveId;
        partial void OnMoveIdChanging(global::System.Int32 value);
        partial void OnMoveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttackerFootmanCount
        {
            get
            {
                return _AttackerFootmanCount;
            }
            set
            {
                OnAttackerFootmanCountChanging(value);
                ReportPropertyChanging("AttackerFootmanCount");
                _AttackerFootmanCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerFootmanCount");
                OnAttackerFootmanCountChanged();
            }
        }
        private global::System.Int32 _AttackerFootmanCount;
        partial void OnAttackerFootmanCountChanging(global::System.Int32 value);
        partial void OnAttackerFootmanCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttackerKnightCount
        {
            get
            {
                return _AttackerKnightCount;
            }
            set
            {
                OnAttackerKnightCountChanging(value);
                ReportPropertyChanging("AttackerKnightCount");
                _AttackerKnightCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerKnightCount");
                OnAttackerKnightCountChanged();
            }
        }
        private global::System.Int32 _AttackerKnightCount;
        partial void OnAttackerKnightCountChanging(global::System.Int32 value);
        partial void OnAttackerKnightCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttackerShipCount
        {
            get
            {
                return _AttackerShipCount;
            }
            set
            {
                OnAttackerShipCountChanging(value);
                ReportPropertyChanging("AttackerShipCount");
                _AttackerShipCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerShipCount");
                OnAttackerShipCountChanged();
            }
        }
        private global::System.Int32 _AttackerShipCount;
        partial void OnAttackerShipCountChanging(global::System.Int32 value);
        partial void OnAttackerShipCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttackerSiegeCount
        {
            get
            {
                return _AttackerSiegeCount;
            }
            set
            {
                OnAttackerSiegeCountChanging(value);
                ReportPropertyChanging("AttackerSiegeCount");
                _AttackerSiegeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerSiegeCount");
                OnAttackerSiegeCountChanged();
            }
        }
        private global::System.Int32 _AttackerSiegeCount;
        partial void OnAttackerSiegeCountChanging(global::System.Int32 value);
        partial void OnAttackerSiegeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttackerBattleCardStrength
        {
            get
            {
                return _AttackerBattleCardStrength;
            }
            set
            {
                OnAttackerBattleCardStrengthChanging(value);
                ReportPropertyChanging("AttackerBattleCardStrength");
                _AttackerBattleCardStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerBattleCardStrength");
                OnAttackerBattleCardStrengthChanged();
            }
        }
        private Nullable<global::System.Int32> _AttackerBattleCardStrength;
        partial void OnAttackerBattleCardStrengthChanging(Nullable<global::System.Int32> value);
        partial void OnAttackerBattleCardStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefenderBattleCardStrength
        {
            get
            {
                return _DefenderBattleCardStrength;
            }
            set
            {
                OnDefenderBattleCardStrengthChanging(value);
                ReportPropertyChanging("DefenderBattleCardStrength");
                _DefenderBattleCardStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefenderBattleCardStrength");
                OnDefenderBattleCardStrengthChanged();
            }
        }
        private Nullable<global::System.Int32> _DefenderBattleCardStrength;
        partial void OnDefenderBattleCardStrengthChanging(Nullable<global::System.Int32> value);
        partial void OnDefenderBattleCardStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AttackerVictory
        {
            get
            {
                return _AttackerVictory;
            }
            set
            {
                OnAttackerVictoryChanging(value);
                ReportPropertyChanging("AttackerVictory");
                _AttackerVictory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerVictory");
                OnAttackerVictoryChanged();
            }
        }
        private global::System.Boolean _AttackerVictory;
        partial void OnAttackerVictoryChanging(global::System.Boolean value);
        partial void OnAttackerVictoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttackerHouseCardId
        {
            get
            {
                return _AttackerHouseCardId;
            }
            set
            {
                OnAttackerHouseCardIdChanging(value);
                ReportPropertyChanging("AttackerHouseCardId");
                _AttackerHouseCardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerHouseCardId");
                OnAttackerHouseCardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AttackerHouseCardId;
        partial void OnAttackerHouseCardIdChanging(Nullable<global::System.Int32> value);
        partial void OnAttackerHouseCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefenderHouseCardId
        {
            get
            {
                return _DefenderHouseCardId;
            }
            set
            {
                OnDefenderHouseCardIdChanging(value);
                ReportPropertyChanging("DefenderHouseCardId");
                _DefenderHouseCardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefenderHouseCardId");
                OnDefenderHouseCardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DefenderHouseCardId;
        partial void OnDefenderHouseCardIdChanging(Nullable<global::System.Int32> value);
        partial void OnDefenderHouseCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamePlayerId
        {
            get
            {
                return _GamePlayerId;
            }
            set
            {
                OnGamePlayerIdChanging(value);
                ReportPropertyChanging("GamePlayerId");
                _GamePlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamePlayerId");
                OnGamePlayerIdChanged();
            }
        }
        private global::System.Int32 _GamePlayerId;
        partial void OnGamePlayerIdChanging(global::System.Int32 value);
        partial void OnGamePlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromRegionId
        {
            get
            {
                return _FromRegionId;
            }
            set
            {
                OnFromRegionIdChanging(value);
                ReportPropertyChanging("FromRegionId");
                _FromRegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromRegionId");
                OnFromRegionIdChanged();
            }
        }
        private global::System.Int32 _FromRegionId;
        partial void OnFromRegionIdChanging(global::System.Int32 value);
        partial void OnFromRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToRegionId
        {
            get
            {
                return _ToRegionId;
            }
            set
            {
                OnToRegionIdChanging(value);
                ReportPropertyChanging("ToRegionId");
                _ToRegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToRegionId");
                OnToRegionIdChanged();
            }
        }
        private global::System.Int32 _ToRegionId;
        partial void OnToRegionIdChanging(global::System.Int32 value);
        partial void OnToRegionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundMove", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundMove", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundMove", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundMove", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.RoundMove", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isAdmin">Initial value of the IsAdmin property.</param>
        public static Player CreatePlayer(global::System.Int32 playerId, global::System.String firstName, global::System.String lastName, global::System.String username, global::System.String password, global::System.Boolean isAdmin)
        {
            Player player = new Player();
            player.PlayerId = playerId;
            player.FirstName = firstName;
            player.LastName = lastName;
            player.Username = username;
            player.Password = password;
            player.IsAdmin = isAdmin;
            return player;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                if (_PlayerId != value)
                {
                    OnPlayerIdChanging(value);
                    ReportPropertyChanging("PlayerId");
                    _PlayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerId");
                    OnPlayerIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlayerPlayerTrophy", "PlayerTrophy")]
        public EntityCollection<PlayerTrophy> PlayerTrophies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerTrophy>("Model.PlayerPlayerTrophy", "PlayerTrophy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerTrophy>("Model.PlayerPlayerTrophy", "PlayerTrophy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PlayerTrophy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerTrophy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerTrophy object.
        /// </summary>
        /// <param name="playerTrophyId">Initial value of the PlayerTrophyId property.</param>
        /// <param name="dateAchieved">Initial value of the DateAchieved property.</param>
        public static PlayerTrophy CreatePlayerTrophy(global::System.Int32 playerTrophyId, global::System.DateTime dateAchieved)
        {
            PlayerTrophy playerTrophy = new PlayerTrophy();
            playerTrophy.PlayerTrophyId = playerTrophyId;
            playerTrophy.DateAchieved = dateAchieved;
            return playerTrophy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerTrophyId
        {
            get
            {
                return _PlayerTrophyId;
            }
            set
            {
                if (_PlayerTrophyId != value)
                {
                    OnPlayerTrophyIdChanging(value);
                    ReportPropertyChanging("PlayerTrophyId");
                    _PlayerTrophyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerTrophyId");
                    OnPlayerTrophyIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerTrophyId;
        partial void OnPlayerTrophyIdChanging(global::System.Int32 value);
        partial void OnPlayerTrophyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAchieved
        {
            get
            {
                return _DateAchieved;
            }
            set
            {
                OnDateAchievedChanging(value);
                ReportPropertyChanging("DateAchieved");
                _DateAchieved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAchieved");
                OnDateAchievedChanged();
            }
        }
        private global::System.DateTime _DateAchieved;
        partial void OnDateAchievedChanging(global::System.DateTime value);
        partial void OnDateAchievedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlayerPlayerTrophy", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Model.PlayerPlayerTrophy", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Model.PlayerPlayerTrophy", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Model.PlayerPlayerTrophy", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("Model.PlayerPlayerTrophy", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TrophyPlayerTrophy", "Trophy")]
        public Trophy Trophy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trophy>("Model.TrophyPlayerTrophy", "Trophy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trophy>("Model.TrophyPlayerTrophy", "Trophy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trophy> TrophyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trophy>("Model.TrophyPlayerTrophy", "Trophy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trophy>("Model.TrophyPlayerTrophy", "Trophy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Port")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Port : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Port object.
        /// </summary>
        /// <param name="portId">Initial value of the PortId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Port CreatePort(global::System.Int32 portId, global::System.String name)
        {
            Port port = new Port();
            port.PortId = portId;
            port.Name = name;
            return port;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortId
        {
            get
            {
                return _PortId;
            }
            set
            {
                if (_PortId != value)
                {
                    OnPortIdChanging(value);
                    ReportPropertyChanging("PortId");
                    _PortId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PortId");
                    OnPortIdChanged();
                }
            }
        }
        private global::System.Int32 _PortId;
        partial void OnPortIdChanging(global::System.Int32 value);
        partial void OnPortIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RegionPort", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionPort", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionPort", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionPort", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("Model.RegionPort", "Region", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="supplyCount">Initial value of the SupplyCount property.</param>
        /// <param name="isStronghold">Initial value of the IsStronghold property.</param>
        /// <param name="isCastle">Initial value of the IsCastle property.</param>
        /// <param name="minimumUnitsToEnter">Initial value of the MinimumUnitsToEnter property.</param>
        /// <param name="consolidatePowerCount">Initial value of the ConsolidatePowerCount property.</param>
        /// <param name="isOcean">Initial value of the IsOcean property.</param>
        public static Region CreateRegion(global::System.Int32 regionId, global::System.String name, global::System.Int32 supplyCount, global::System.Boolean isStronghold, global::System.Boolean isCastle, global::System.Int32 minimumUnitsToEnter, global::System.Int32 consolidatePowerCount, global::System.Boolean isOcean)
        {
            Region region = new Region();
            region.RegionId = regionId;
            region.Name = name;
            region.SupplyCount = supplyCount;
            region.IsStronghold = isStronghold;
            region.IsCastle = isCastle;
            region.MinimumUnitsToEnter = minimumUnitsToEnter;
            region.ConsolidatePowerCount = consolidatePowerCount;
            region.IsOcean = isOcean;
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplyCount
        {
            get
            {
                return _SupplyCount;
            }
            set
            {
                OnSupplyCountChanging(value);
                ReportPropertyChanging("SupplyCount");
                _SupplyCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplyCount");
                OnSupplyCountChanged();
            }
        }
        private global::System.Int32 _SupplyCount;
        partial void OnSupplyCountChanging(global::System.Int32 value);
        partial void OnSupplyCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsStronghold
        {
            get
            {
                return _IsStronghold;
            }
            set
            {
                OnIsStrongholdChanging(value);
                ReportPropertyChanging("IsStronghold");
                _IsStronghold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsStronghold");
                OnIsStrongholdChanged();
            }
        }
        private global::System.Boolean _IsStronghold;
        partial void OnIsStrongholdChanging(global::System.Boolean value);
        partial void OnIsStrongholdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCastle
        {
            get
            {
                return _IsCastle;
            }
            set
            {
                OnIsCastleChanging(value);
                ReportPropertyChanging("IsCastle");
                _IsCastle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCastle");
                OnIsCastleChanged();
            }
        }
        private global::System.Boolean _IsCastle;
        partial void OnIsCastleChanging(global::System.Boolean value);
        partial void OnIsCastleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumUnitsToEnter
        {
            get
            {
                return _MinimumUnitsToEnter;
            }
            set
            {
                OnMinimumUnitsToEnterChanging(value);
                ReportPropertyChanging("MinimumUnitsToEnter");
                _MinimumUnitsToEnter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumUnitsToEnter");
                OnMinimumUnitsToEnterChanged();
            }
        }
        private global::System.Int32 _MinimumUnitsToEnter;
        partial void OnMinimumUnitsToEnterChanging(global::System.Int32 value);
        partial void OnMinimumUnitsToEnterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefenseCount
        {
            get
            {
                return _DefenseCount;
            }
            set
            {
                OnDefenseCountChanging(value);
                ReportPropertyChanging("DefenseCount");
                _DefenseCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefenseCount");
                OnDefenseCountChanged();
            }
        }
        private Nullable<global::System.Int32> _DefenseCount;
        partial void OnDefenseCountChanging(Nullable<global::System.Int32> value);
        partial void OnDefenseCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConsolidatePowerCount
        {
            get
            {
                return _ConsolidatePowerCount;
            }
            set
            {
                OnConsolidatePowerCountChanging(value);
                ReportPropertyChanging("ConsolidatePowerCount");
                _ConsolidatePowerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsolidatePowerCount");
                OnConsolidatePowerCountChanged();
            }
        }
        private global::System.Int32 _ConsolidatePowerCount;
        partial void OnConsolidatePowerCountChanging(global::System.Int32 value);
        partial void OnConsolidatePowerCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOcean
        {
            get
            {
                return _IsOcean;
            }
            set
            {
                OnIsOceanChanging(value);
                ReportPropertyChanging("IsOcean");
                _IsOcean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOcean");
                OnIsOceanChanged();
            }
        }
        private global::System.Boolean _IsOcean;
        partial void OnIsOceanChanging(global::System.Boolean value);
        partial void OnIsOceanChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RegionPort", "Port")]
        public Port Port
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("Model.RegionPort", "Port").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("Model.RegionPort", "Port").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Port> PortReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("Model.RegionPort", "Port");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Port>("Model.RegionPort", "Port", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RegionRegionRelationship", "RegionRelationship")]
        public EntityCollection<RegionRelationship> RegionRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegionRelationship>("Model.RegionRegionRelationship", "RegionRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegionRelationship>("Model.RegionRegionRelationship", "RegionRelationship", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RegionRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegionRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegionRelationship object.
        /// </summary>
        /// <param name="regionRelationshipId">Initial value of the RegionRelationshipId property.</param>
        /// <param name="destinationRegionId">Initial value of the DestinationRegionId property.</param>
        public static RegionRelationship CreateRegionRelationship(global::System.Int32 regionRelationshipId, global::System.Int32 destinationRegionId)
        {
            RegionRelationship regionRelationship = new RegionRelationship();
            regionRelationship.RegionRelationshipId = regionRelationshipId;
            regionRelationship.DestinationRegionId = destinationRegionId;
            return regionRelationship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionRelationshipId
        {
            get
            {
                return _RegionRelationshipId;
            }
            set
            {
                if (_RegionRelationshipId != value)
                {
                    OnRegionRelationshipIdChanging(value);
                    ReportPropertyChanging("RegionRelationshipId");
                    _RegionRelationshipId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionRelationshipId");
                    OnRegionRelationshipIdChanged();
                }
            }
        }
        private global::System.Int32 _RegionRelationshipId;
        partial void OnRegionRelationshipIdChanging(global::System.Int32 value);
        partial void OnRegionRelationshipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DestinationRegionId
        {
            get
            {
                return _DestinationRegionId;
            }
            set
            {
                OnDestinationRegionIdChanging(value);
                ReportPropertyChanging("DestinationRegionId");
                _DestinationRegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DestinationRegionId");
                OnDestinationRegionIdChanged();
            }
        }
        private global::System.Int32 _DestinationRegionId;
        partial void OnDestinationRegionIdChanging(global::System.Int32 value);
        partial void OnDestinationRegionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RegionRegionRelationship", "Region")]
        public Region SourceRegion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionRelationship", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionRelationship", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> SourceRegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionRelationship", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("Model.RegionRegionRelationship", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RegionRelationshipRelationshipBridge", "RelationshipBridge")]
        public EntityCollection<RelationshipBridge> RelationshipBridges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelationshipBridge>("Model.RegionRelationshipRelationshipBridge", "RelationshipBridge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelationshipBridge>("Model.RegionRelationshipRelationshipBridge", "RelationshipBridge", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RegionStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegionStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegionStatus object.
        /// </summary>
        /// <param name="regionStatusId">Initial value of the RegionStatusId property.</param>
        /// <param name="orderToken">Initial value of the OrderToken property.</param>
        /// <param name="footmanCount">Initial value of the FootmanCount property.</param>
        /// <param name="knightCount">Initial value of the KnightCount property.</param>
        /// <param name="shipCount">Initial value of the ShipCount property.</param>
        /// <param name="siegeCount">Initial value of the SiegeCount property.</param>
        /// <param name="controlledByGamePlayerId">Initial value of the ControlledByGamePlayerId property.</param>
        public static RegionStatus CreateRegionStatus(global::System.Int32 regionStatusId, global::System.String orderToken, global::System.Int32 footmanCount, global::System.Int32 knightCount, global::System.Int32 shipCount, global::System.Int32 siegeCount, global::System.Int32 controlledByGamePlayerId)
        {
            RegionStatus regionStatus = new RegionStatus();
            regionStatus.RegionStatusId = regionStatusId;
            regionStatus.OrderToken = orderToken;
            regionStatus.FootmanCount = footmanCount;
            regionStatus.KnightCount = knightCount;
            regionStatus.ShipCount = shipCount;
            regionStatus.SiegeCount = siegeCount;
            regionStatus.ControlledByGamePlayerId = controlledByGamePlayerId;
            return regionStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionStatusId
        {
            get
            {
                return _RegionStatusId;
            }
            set
            {
                if (_RegionStatusId != value)
                {
                    OnRegionStatusIdChanging(value);
                    ReportPropertyChanging("RegionStatusId");
                    _RegionStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionStatusId");
                    OnRegionStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _RegionStatusId;
        partial void OnRegionStatusIdChanging(global::System.Int32 value);
        partial void OnRegionStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderToken
        {
            get
            {
                return _OrderToken;
            }
            set
            {
                OnOrderTokenChanging(value);
                ReportPropertyChanging("OrderToken");
                _OrderToken = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderToken");
                OnOrderTokenChanged();
            }
        }
        private global::System.String _OrderToken;
        partial void OnOrderTokenChanging(global::System.String value);
        partial void OnOrderTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FootmanCount
        {
            get
            {
                return _FootmanCount;
            }
            set
            {
                OnFootmanCountChanging(value);
                ReportPropertyChanging("FootmanCount");
                _FootmanCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FootmanCount");
                OnFootmanCountChanged();
            }
        }
        private global::System.Int32 _FootmanCount;
        partial void OnFootmanCountChanging(global::System.Int32 value);
        partial void OnFootmanCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KnightCount
        {
            get
            {
                return _KnightCount;
            }
            set
            {
                OnKnightCountChanging(value);
                ReportPropertyChanging("KnightCount");
                _KnightCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KnightCount");
                OnKnightCountChanged();
            }
        }
        private global::System.Int32 _KnightCount;
        partial void OnKnightCountChanging(global::System.Int32 value);
        partial void OnKnightCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShipCount
        {
            get
            {
                return _ShipCount;
            }
            set
            {
                OnShipCountChanging(value);
                ReportPropertyChanging("ShipCount");
                _ShipCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShipCount");
                OnShipCountChanged();
            }
        }
        private global::System.Int32 _ShipCount;
        partial void OnShipCountChanging(global::System.Int32 value);
        partial void OnShipCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiegeCount
        {
            get
            {
                return _SiegeCount;
            }
            set
            {
                OnSiegeCountChanging(value);
                ReportPropertyChanging("SiegeCount");
                _SiegeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiegeCount");
                OnSiegeCountChanged();
            }
        }
        private global::System.Int32 _SiegeCount;
        partial void OnSiegeCountChanging(global::System.Int32 value);
        partial void OnSiegeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ControlledByGamePlayerId
        {
            get
            {
                return _ControlledByGamePlayerId;
            }
            set
            {
                OnControlledByGamePlayerIdChanging(value);
                ReportPropertyChanging("ControlledByGamePlayerId");
                _ControlledByGamePlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ControlledByGamePlayerId");
                OnControlledByGamePlayerIdChanged();
            }
        }
        private global::System.Int32 _ControlledByGamePlayerId;
        partial void OnControlledByGamePlayerIdChanging(global::System.Int32 value);
        partial void OnControlledByGamePlayerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RegionRegionStatus", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionStatus", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionStatus", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionStatus", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("Model.RegionRegionStatus", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundRegionStatus", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundRegionStatus", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundRegionStatus", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundRegionStatus", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.RoundRegionStatus", "Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RegionStatusPort", "Port")]
        public Port Port
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("Model.RegionStatusPort", "Port").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("Model.RegionStatusPort", "Port").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Port> PortReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("Model.RegionStatusPort", "Port");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Port>("Model.RegionStatusPort", "Port", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RelationshipBridge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelationshipBridge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelationshipBridge object.
        /// </summary>
        /// <param name="relationshipBridgeId">Initial value of the RelationshipBridgeId property.</param>
        /// <param name="bridgeRegionId">Initial value of the BridgeRegionId property.</param>
        public static RelationshipBridge CreateRelationshipBridge(global::System.Int32 relationshipBridgeId, global::System.Int32 bridgeRegionId)
        {
            RelationshipBridge relationshipBridge = new RelationshipBridge();
            relationshipBridge.RelationshipBridgeId = relationshipBridgeId;
            relationshipBridge.BridgeRegionId = bridgeRegionId;
            return relationshipBridge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipBridgeId
        {
            get
            {
                return _RelationshipBridgeId;
            }
            set
            {
                if (_RelationshipBridgeId != value)
                {
                    OnRelationshipBridgeIdChanging(value);
                    ReportPropertyChanging("RelationshipBridgeId");
                    _RelationshipBridgeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelationshipBridgeId");
                    OnRelationshipBridgeIdChanged();
                }
            }
        }
        private global::System.Int32 _RelationshipBridgeId;
        partial void OnRelationshipBridgeIdChanging(global::System.Int32 value);
        partial void OnRelationshipBridgeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BridgeRegionId
        {
            get
            {
                return _BridgeRegionId;
            }
            set
            {
                OnBridgeRegionIdChanging(value);
                ReportPropertyChanging("BridgeRegionId");
                _BridgeRegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BridgeRegionId");
                OnBridgeRegionIdChanged();
            }
        }
        private global::System.Int32 _BridgeRegionId;
        partial void OnBridgeRegionIdChanging(global::System.Int32 value);
        partial void OnBridgeRegionIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Round object.
        /// </summary>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="roundNumber">Initial value of the RoundNumber property.</param>
        /// <param name="wildlingCount">Initial value of the WildlingCount property.</param>
        /// <param name="wildlingAttack">Initial value of the WildlingAttack property.</param>
        public static Round CreateRound(global::System.Int32 roundId, global::System.Int32 roundNumber, global::System.Int32 wildlingCount, global::System.Boolean wildlingAttack)
        {
            Round round = new Round();
            round.RoundId = roundId;
            round.RoundNumber = roundNumber;
            round.WildlingCount = wildlingCount;
            round.WildlingAttack = wildlingAttack;
            return round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int32 _RoundId;
        partial void OnRoundIdChanging(global::System.Int32 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundNumber
        {
            get
            {
                return _RoundNumber;
            }
            set
            {
                OnRoundNumberChanging(value);
                ReportPropertyChanging("RoundNumber");
                _RoundNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoundNumber");
                OnRoundNumberChanged();
            }
        }
        private global::System.Int32 _RoundNumber;
        partial void OnRoundNumberChanging(global::System.Int32 value);
        partial void OnRoundNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WildlingCount
        {
            get
            {
                return _WildlingCount;
            }
            set
            {
                OnWildlingCountChanging(value);
                ReportPropertyChanging("WildlingCount");
                _WildlingCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WildlingCount");
                OnWildlingCountChanged();
            }
        }
        private global::System.Int32 _WildlingCount;
        partial void OnWildlingCountChanging(global::System.Int32 value);
        partial void OnWildlingCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WildlingAttack
        {
            get
            {
                return _WildlingAttack;
            }
            set
            {
                OnWildlingAttackChanging(value);
                ReportPropertyChanging("WildlingAttack");
                _WildlingAttack = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WildlingAttack");
                OnWildlingAttackChanged();
            }
        }
        private global::System.Boolean _WildlingAttack;
        partial void OnWildlingAttackChanging(global::System.Boolean value);
        partial void OnWildlingAttackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WildlingVictory
        {
            get
            {
                return _WildlingVictory;
            }
            set
            {
                OnWildlingVictoryChanging(value);
                ReportPropertyChanging("WildlingVictory");
                _WildlingVictory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WildlingVictory");
                OnWildlingVictoryChanged();
            }
        }
        private Nullable<global::System.Boolean> _WildlingVictory;
        partial void OnWildlingVictoryChanging(Nullable<global::System.Boolean> value);
        partial void OnWildlingVictoryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameRound", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameRound", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameRound", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameRound", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("Model.GameRound", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundRegionStatus", "RegionStatus")]
        public EntityCollection<RegionStatus> RegionStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegionStatus>("Model.RoundRegionStatus", "RegionStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegionStatus>("Model.RoundRegionStatus", "RegionStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundMove", "Move")]
        public EntityCollection<Move> Moves
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Move>("Model.RoundMove", "Move");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Move>("Model.RoundMove", "Move", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundInfluenceTrackStatus", "InfluenceTrackStatus")]
        public EntityCollection<InfluenceTrackStatus> InfluenceTrackStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfluenceTrackStatus>("Model.RoundInfluenceTrackStatus", "InfluenceTrackStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfluenceTrackStatus>("Model.RoundInfluenceTrackStatus", "InfluenceTrackStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundWesterosCardStatus", "WesterosCardStatus")]
        public WesterosCardStatus WesterosCardStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WesterosCardStatus>("Model.RoundWesterosCardStatus", "WesterosCardStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WesterosCardStatus>("Model.RoundWesterosCardStatus", "WesterosCardStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WesterosCardStatus> WesterosCardStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WesterosCardStatus>("Model.RoundWesterosCardStatus", "WesterosCardStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WesterosCardStatus>("Model.RoundWesterosCardStatus", "WesterosCardStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Trivia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trivia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trivia object.
        /// </summary>
        /// <param name="triviaId">Initial value of the TriviaId property.</param>
        /// <param name="questionText">Initial value of the QuestionText property.</param>
        public static Trivia CreateTrivia(global::System.Int32 triviaId, global::System.String questionText)
        {
            Trivia trivia = new Trivia();
            trivia.TriviaId = triviaId;
            trivia.QuestionText = questionText;
            return trivia;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TriviaId
        {
            get
            {
                return _TriviaId;
            }
            set
            {
                if (_TriviaId != value)
                {
                    OnTriviaIdChanging(value);
                    ReportPropertyChanging("TriviaId");
                    _TriviaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TriviaId");
                    OnTriviaIdChanged();
                }
            }
        }
        private global::System.Int32 _TriviaId;
        partial void OnTriviaIdChanging(global::System.Int32 value);
        partial void OnTriviaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuestionText
        {
            get
            {
                return _QuestionText;
            }
            set
            {
                OnQuestionTextChanging(value);
                ReportPropertyChanging("QuestionText");
                _QuestionText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QuestionText");
                OnQuestionTextChanged();
            }
        }
        private global::System.String _QuestionText;
        partial void OnQuestionTextChanging(global::System.String value);
        partial void OnQuestionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnswerText
        {
            get
            {
                return _AnswerText;
            }
            set
            {
                OnAnswerTextChanging(value);
                ReportPropertyChanging("AnswerText");
                _AnswerText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnswerText");
                OnAnswerTextChanged();
            }
        }
        private global::System.String _AnswerText;
        partial void OnAnswerTextChanging(global::System.String value);
        partial void OnAnswerTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TriviaTriviaAlternative", "TriviaAlternative")]
        public EntityCollection<TriviaAlternative> TriviaAlternatives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TriviaAlternative>("Model.TriviaTriviaAlternative", "TriviaAlternative");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TriviaAlternative>("Model.TriviaTriviaAlternative", "TriviaAlternative", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TriviaAlternative")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TriviaAlternative : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TriviaAlternative object.
        /// </summary>
        /// <param name="triviaAlternativeId">Initial value of the TriviaAlternativeId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="isCorrect">Initial value of the IsCorrect property.</param>
        public static TriviaAlternative CreateTriviaAlternative(global::System.Int32 triviaAlternativeId, global::System.String text, global::System.Boolean isCorrect)
        {
            TriviaAlternative triviaAlternative = new TriviaAlternative();
            triviaAlternative.TriviaAlternativeId = triviaAlternativeId;
            triviaAlternative.Text = text;
            triviaAlternative.IsCorrect = isCorrect;
            return triviaAlternative;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TriviaAlternativeId
        {
            get
            {
                return _TriviaAlternativeId;
            }
            set
            {
                if (_TriviaAlternativeId != value)
                {
                    OnTriviaAlternativeIdChanging(value);
                    ReportPropertyChanging("TriviaAlternativeId");
                    _TriviaAlternativeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TriviaAlternativeId");
                    OnTriviaAlternativeIdChanged();
                }
            }
        }
        private global::System.Int32 _TriviaAlternativeId;
        partial void OnTriviaAlternativeIdChanging(global::System.Int32 value);
        partial void OnTriviaAlternativeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCorrect
        {
            get
            {
                return _IsCorrect;
            }
            set
            {
                OnIsCorrectChanging(value);
                ReportPropertyChanging("IsCorrect");
                _IsCorrect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCorrect");
                OnIsCorrectChanged();
            }
        }
        private global::System.Boolean _IsCorrect;
        partial void OnIsCorrectChanging(global::System.Boolean value);
        partial void OnIsCorrectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TriviaTriviaAlternative", "Trivia")]
        public Trivia Trivia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trivia>("Model.TriviaTriviaAlternative", "Trivia").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trivia>("Model.TriviaTriviaAlternative", "Trivia").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trivia> TriviaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trivia>("Model.TriviaTriviaAlternative", "Trivia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trivia>("Model.TriviaTriviaAlternative", "Trivia", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Trophy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trophy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trophy object.
        /// </summary>
        /// <param name="trophyId">Initial value of the TrophyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Trophy CreateTrophy(global::System.Int32 trophyId, global::System.String name, global::System.String description)
        {
            Trophy trophy = new Trophy();
            trophy.TrophyId = trophyId;
            trophy.Name = name;
            trophy.Description = description;
            return trophy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrophyId
        {
            get
            {
                return _TrophyId;
            }
            set
            {
                if (_TrophyId != value)
                {
                    OnTrophyIdChanging(value);
                    ReportPropertyChanging("TrophyId");
                    _TrophyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrophyId");
                    OnTrophyIdChanged();
                }
            }
        }
        private global::System.Int32 _TrophyId;
        partial void OnTrophyIdChanging(global::System.Int32 value);
        partial void OnTrophyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="WesterosCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WesterosCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WesterosCard object.
        /// </summary>
        /// <param name="westerosCardId">Initial value of the WesterosCardId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deck">Initial value of the Deck property.</param>
        public static WesterosCard CreateWesterosCard(global::System.Int32 westerosCardId, global::System.String name, global::System.Int32 deck)
        {
            WesterosCard westerosCard = new WesterosCard();
            westerosCard.WesterosCardId = westerosCardId;
            westerosCard.Name = name;
            westerosCard.Deck = deck;
            return westerosCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WesterosCardId
        {
            get
            {
                return _WesterosCardId;
            }
            set
            {
                if (_WesterosCardId != value)
                {
                    OnWesterosCardIdChanging(value);
                    ReportPropertyChanging("WesterosCardId");
                    _WesterosCardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WesterosCardId");
                    OnWesterosCardIdChanged();
                }
            }
        }
        private global::System.Int32 _WesterosCardId;
        partial void OnWesterosCardIdChanging(global::System.Int32 value);
        partial void OnWesterosCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Deck
        {
            get
            {
                return _Deck;
            }
            set
            {
                OnDeckChanging(value);
                ReportPropertyChanging("Deck");
                _Deck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deck");
                OnDeckChanged();
            }
        }
        private global::System.Int32 _Deck;
        partial void OnDeckChanging(global::System.Int32 value);
        partial void OnDeckChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="WesterosCardStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WesterosCardStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WesterosCardStatus object.
        /// </summary>
        /// <param name="westerosCardStatusId">Initial value of the WesterosCardStatusId property.</param>
        /// <param name="deckOneId">Initial value of the DeckOneId property.</param>
        /// <param name="deckTwoId">Initial value of the DeckTwoId property.</param>
        /// <param name="deckThreeId">Initial value of the DeckThreeId property.</param>
        public static WesterosCardStatus CreateWesterosCardStatus(global::System.Int32 westerosCardStatusId, global::System.Int64 deckOneId, global::System.Int64 deckTwoId, global::System.Int64 deckThreeId)
        {
            WesterosCardStatus westerosCardStatus = new WesterosCardStatus();
            westerosCardStatus.WesterosCardStatusId = westerosCardStatusId;
            westerosCardStatus.DeckOneId = deckOneId;
            westerosCardStatus.DeckTwoId = deckTwoId;
            westerosCardStatus.DeckThreeId = deckThreeId;
            return westerosCardStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WesterosCardStatusId
        {
            get
            {
                return _WesterosCardStatusId;
            }
            set
            {
                if (_WesterosCardStatusId != value)
                {
                    OnWesterosCardStatusIdChanging(value);
                    ReportPropertyChanging("WesterosCardStatusId");
                    _WesterosCardStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WesterosCardStatusId");
                    OnWesterosCardStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _WesterosCardStatusId;
        partial void OnWesterosCardStatusIdChanging(global::System.Int32 value);
        partial void OnWesterosCardStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DeckOneId
        {
            get
            {
                return _DeckOneId;
            }
            set
            {
                OnDeckOneIdChanging(value);
                ReportPropertyChanging("DeckOneId");
                _DeckOneId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeckOneId");
                OnDeckOneIdChanged();
            }
        }
        private global::System.Int64 _DeckOneId;
        partial void OnDeckOneIdChanging(global::System.Int64 value);
        partial void OnDeckOneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DeckTwoId
        {
            get
            {
                return _DeckTwoId;
            }
            set
            {
                OnDeckTwoIdChanging(value);
                ReportPropertyChanging("DeckTwoId");
                _DeckTwoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeckTwoId");
                OnDeckTwoIdChanged();
            }
        }
        private global::System.Int64 _DeckTwoId;
        partial void OnDeckTwoIdChanging(global::System.Int64 value);
        partial void OnDeckTwoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DeckThreeId
        {
            get
            {
                return _DeckThreeId;
            }
            set
            {
                OnDeckThreeIdChanging(value);
                ReportPropertyChanging("DeckThreeId");
                _DeckThreeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeckThreeId");
                OnDeckThreeIdChanged();
            }
        }
        private global::System.Int64 _DeckThreeId;
        partial void OnDeckThreeIdChanging(global::System.Int64 value);
        partial void OnDeckThreeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundWesterosCardStatus", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundWesterosCardStatus", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundWesterosCardStatus", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundWesterosCardStatus", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.RoundWesterosCardStatus", "Round", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
