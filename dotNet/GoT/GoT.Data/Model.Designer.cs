//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "HouseCharacter", "House", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.House), "Character", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Character))]
[assembly: EdmRelationshipAttribute("Model", "PlayerTrophy", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Player), "Trophy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Trophy))]
[assembly: EdmRelationshipAttribute("Model", "GameRound", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Game), "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Round))]
[assembly: EdmRelationshipAttribute("Model", "GameGamePlayer", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Game), "GamePlayer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.GamePlayer))]
[assembly: EdmRelationshipAttribute("Model", "RegionRegionStatus", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Region), "RegionStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.RegionStatus))]
[assembly: EdmRelationshipAttribute("Model", "CharacterHouseCard", "Character", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Character), "HouseCard", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GoT.Data.HouseCard))]
[assembly: EdmRelationshipAttribute("Model", "RoundRegionStatus", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Round), "RegionStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.RegionStatus))]
[assembly: EdmRelationshipAttribute("Model", "GamePlayerMove", "GamePlayer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.GamePlayer), "Move", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Move))]
[assembly: EdmRelationshipAttribute("Model", "RoundMove", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Round), "Move", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.Move))]
[assembly: EdmRelationshipAttribute("Model", "RoundInfluenceTrackStatus", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Round), "InfluenceTrackStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.InfluenceTrackStatus))]
[assembly: EdmRelationshipAttribute("Model", "GameGameResult", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.Game), "GameResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.GameResult))]
[assembly: EdmRelationshipAttribute("Model", "GamePlayerGameResult", "GamePlayer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoT.Data.GamePlayer), "GameResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoT.Data.GameResult))]

#endregion

namespace GoT.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GoTDataContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GoTDataContext object using the connection string found in the 'GoTDataContext' section of the application configuration file.
        /// </summary>
        public GoTDataContext() : base("name=GoTDataContext", "GoTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GoTDataContext object.
        /// </summary>
        public GoTDataContext(string connectionString) : base(connectionString, "GoTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GoTDataContext object.
        /// </summary>
        public GoTDataContext(EntityConnection connection) : base(connection, "GoTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<House> Houses
        {
            get
            {
                if ((_Houses == null))
                {
                    _Houses = base.CreateObjectSet<House>("Houses");
                }
                return _Houses;
            }
        }
        private ObjectSet<House> _Houses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Character> Characters
        {
            get
            {
                if ((_Characters == null))
                {
                    _Characters = base.CreateObjectSet<Character>("Characters");
                }
                return _Characters;
            }
        }
        private ObjectSet<Character> _Characters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HouseCard> HouseCards
        {
            get
            {
                if ((_HouseCards == null))
                {
                    _HouseCards = base.CreateObjectSet<HouseCard>("HouseCards");
                }
                return _HouseCards;
            }
        }
        private ObjectSet<HouseCard> _HouseCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trophy> Trophys
        {
            get
            {
                if ((_Trophys == null))
                {
                    _Trophys = base.CreateObjectSet<Trophy>("Trophys");
                }
                return _Trophys;
            }
        }
        private ObjectSet<Trophy> _Trophys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Round> Rounds
        {
            get
            {
                if ((_Rounds == null))
                {
                    _Rounds = base.CreateObjectSet<Round>("Rounds");
                }
                return _Rounds;
            }
        }
        private ObjectSet<Round> _Rounds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegionStatus> RegionStatuses
        {
            get
            {
                if ((_RegionStatuses == null))
                {
                    _RegionStatuses = base.CreateObjectSet<RegionStatus>("RegionStatuses");
                }
                return _RegionStatuses;
            }
        }
        private ObjectSet<RegionStatus> _RegionStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Move> Moves
        {
            get
            {
                if ((_Moves == null))
                {
                    _Moves = base.CreateObjectSet<Move>("Moves");
                }
                return _Moves;
            }
        }
        private ObjectSet<Move> _Moves;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfluenceTrackStatus> InfluenceTrackStatuses
        {
            get
            {
                if ((_InfluenceTrackStatuses == null))
                {
                    _InfluenceTrackStatuses = base.CreateObjectSet<InfluenceTrackStatus>("InfluenceTrackStatuses");
                }
                return _InfluenceTrackStatuses;
            }
        }
        private ObjectSet<InfluenceTrackStatus> _InfluenceTrackStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GamePlayer> GamePlayers
        {
            get
            {
                if ((_GamePlayers == null))
                {
                    _GamePlayers = base.CreateObjectSet<GamePlayer>("GamePlayers");
                }
                return _GamePlayers;
            }
        }
        private ObjectSet<GamePlayer> _GamePlayers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameResult> GameResults
        {
            get
            {
                if ((_GameResults == null))
                {
                    _GameResults = base.CreateObjectSet<GameResult>("GameResults");
                }
                return _GameResults;
            }
        }
        private ObjectSet<GameResult> _GameResults;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Houses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHouses(House house)
        {
            base.AddObject("Houses", house);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Characters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCharacters(Character character)
        {
            base.AddObject("Characters", character);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HouseCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHouseCards(HouseCard houseCard)
        {
            base.AddObject("HouseCards", houseCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trophys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrophys(Trophy trophy)
        {
            base.AddObject("Trophys", trophy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRounds(Round round)
        {
            base.AddObject("Rounds", round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionStatuses(RegionStatus regionStatus)
        {
            base.AddObject("RegionStatuses", regionStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Moves EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMoves(Move move)
        {
            base.AddObject("Moves", move);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfluenceTrackStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfluenceTrackStatuses(InfluenceTrackStatus influenceTrackStatus)
        {
            base.AddObject("InfluenceTrackStatuses", influenceTrackStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GamePlayers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGamePlayers(GamePlayer gamePlayer)
        {
            base.AddObject("GamePlayers", gamePlayer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameResults(GameResult gameResult)
        {
            base.AddObject("GameResults", gameResult);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Character")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Character : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Character object.
        /// </summary>
        /// <param name="characterId">Initial value of the CharacterId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        public static Character CreateCharacter(global::System.Int32 characterId, global::System.String firstName, global::System.String lastName, global::System.String gender)
        {
            Character character = new Character();
            character.CharacterId = characterId;
            character.FirstName = firstName;
            character.LastName = lastName;
            character.Gender = gender;
            return character;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CharacterId
        {
            get
            {
                return _CharacterId;
            }
            set
            {
                if (_CharacterId != value)
                {
                    OnCharacterIdChanging(value);
                    ReportPropertyChanging("CharacterId");
                    _CharacterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CharacterId");
                    OnCharacterIdChanged();
                }
            }
        }
        private global::System.Int32 _CharacterId;
        partial void OnCharacterIdChanging(global::System.Int32 value);
        partial void OnCharacterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "HouseCharacter", "House")]
        public House House
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseCharacter", "House").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseCharacter", "House").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<House> HouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<House>("Model.HouseCharacter", "House");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<House>("Model.HouseCharacter", "House", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CharacterHouseCard", "HouseCard")]
        public HouseCard HouseCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HouseCard>("Model.CharacterHouseCard", "HouseCard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HouseCard>("Model.CharacterHouseCard", "HouseCard").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HouseCard> HouseCardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HouseCard>("Model.CharacterHouseCard", "HouseCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HouseCard>("Model.CharacterHouseCard", "HouseCard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="gameId">Initial value of the GameId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="mode">Initial value of the Mode property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Game CreateGame(global::System.Int64 gameId, global::System.DateTime date, global::System.String mode, global::System.String status)
        {
            Game game = new Game();
            game.GameId = gameId;
            game.Date = date;
            game.Mode = mode;
            game.Status = status;
            return game;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Int64 _GameId;
        partial void OnGameIdChanging(global::System.Int64 value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.String _Mode;
        partial void OnModeChanging(global::System.String value);
        partial void OnModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameRound", "Round")]
        public EntityCollection<Round> Rounds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Round>("Model.GameRound", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Round>("Model.GameRound", "Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameGamePlayer", "GamePlayer")]
        public EntityCollection<GamePlayer> GamePlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GamePlayer>("Model.GameGamePlayer", "GamePlayer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GamePlayer>("Model.GameGamePlayer", "GamePlayer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameGameResult", "GameResult")]
        public EntityCollection<GameResult> GameResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameResult>("Model.GameGameResult", "GameResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameResult>("Model.GameGameResult", "GameResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GamePlayer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GamePlayer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GamePlayer object.
        /// </summary>
        /// <param name="gamePlayerId">Initial value of the GamePlayerId property.</param>
        /// <param name="houseId">Initial value of the HouseId property.</param>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        public static GamePlayer CreateGamePlayer(global::System.Int64 gamePlayerId, global::System.Int64 houseId, global::System.Int64 playerId)
        {
            GamePlayer gamePlayer = new GamePlayer();
            gamePlayer.GamePlayerId = gamePlayerId;
            gamePlayer.HouseId = houseId;
            gamePlayer.PlayerId = playerId;
            return gamePlayer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GamePlayerId
        {
            get
            {
                return _GamePlayerId;
            }
            set
            {
                if (_GamePlayerId != value)
                {
                    OnGamePlayerIdChanging(value);
                    ReportPropertyChanging("GamePlayerId");
                    _GamePlayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GamePlayerId");
                    OnGamePlayerIdChanged();
                }
            }
        }
        private global::System.Int64 _GamePlayerId;
        partial void OnGamePlayerIdChanging(global::System.Int64 value);
        partial void OnGamePlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HouseId
        {
            get
            {
                return _HouseId;
            }
            set
            {
                OnHouseIdChanging(value);
                ReportPropertyChanging("HouseId");
                _HouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HouseId");
                OnHouseIdChanged();
            }
        }
        private global::System.Int64 _HouseId;
        partial void OnHouseIdChanging(global::System.Int64 value);
        partial void OnHouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private global::System.Int64 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int64 value);
        partial void OnPlayerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameGamePlayer", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameGamePlayer", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameGamePlayer", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameGamePlayer", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("Model.GameGamePlayer", "Game", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GameResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameResult object.
        /// </summary>
        /// <param name="gameResultId">Initial value of the GameResultId property.</param>
        /// <param name="place">Initial value of the Place property.</param>
        public static GameResult CreateGameResult(global::System.Int64 gameResultId, global::System.Int32 place)
        {
            GameResult gameResult = new GameResult();
            gameResult.GameResultId = gameResultId;
            gameResult.Place = place;
            return gameResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GameResultId
        {
            get
            {
                return _GameResultId;
            }
            set
            {
                if (_GameResultId != value)
                {
                    OnGameResultIdChanging(value);
                    ReportPropertyChanging("GameResultId");
                    _GameResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameResultId");
                    OnGameResultIdChanged();
                }
            }
        }
        private global::System.Int64 _GameResultId;
        partial void OnGameResultIdChanging(global::System.Int64 value);
        partial void OnGameResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.Int32 _Place;
        partial void OnPlaceChanging(global::System.Int32 value);
        partial void OnPlaceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GamePlayerGameResult", "GamePlayer")]
        public GamePlayer GamePlayer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePlayer>("Model.GamePlayerGameResult", "GamePlayer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePlayer>("Model.GamePlayerGameResult", "GamePlayer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GamePlayer> GamePlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePlayer>("Model.GamePlayerGameResult", "GamePlayer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GamePlayer>("Model.GamePlayerGameResult", "GamePlayer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="House")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class House : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new House object.
        /// </summary>
        /// <param name="houseId">Initial value of the HouseId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static House CreateHouse(global::System.Int32 houseId, global::System.String name)
        {
            House house = new House();
            house.HouseId = houseId;
            house.Name = name;
            return house;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseId
        {
            get
            {
                return _HouseId;
            }
            set
            {
                if (_HouseId != value)
                {
                    OnHouseIdChanging(value);
                    ReportPropertyChanging("HouseId");
                    _HouseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HouseId");
                    OnHouseIdChanged();
                }
            }
        }
        private global::System.Int32 _HouseId;
        partial void OnHouseIdChanging(global::System.Int32 value);
        partial void OnHouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Sigil
        {
            get
            {
                return StructuralObject.GetValidValue(_Sigil);
            }
            set
            {
                OnSigilChanging(value);
                ReportPropertyChanging("Sigil");
                _Sigil = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sigil");
                OnSigilChanged();
            }
        }
        private global::System.Byte[] _Sigil;
        partial void OnSigilChanging(global::System.Byte[] value);
        partial void OnSigilChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "HouseCharacter", "Character")]
        public EntityCollection<Character> Characters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("Model.HouseCharacter", "Character");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("Model.HouseCharacter", "Character", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="HouseCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HouseCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HouseCard object.
        /// </summary>
        /// <param name="houseCardId">Initial value of the HouseCardId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="combatStrength">Initial value of the CombatStrength property.</param>
        /// <param name="swordCount">Initial value of the SwordCount property.</param>
        /// <param name="towerCount">Initial value of the TowerCount property.</param>
        public static HouseCard CreateHouseCard(global::System.Int32 houseCardId, global::System.String description, global::System.Int32 combatStrength, global::System.Int32 swordCount, global::System.Int32 towerCount)
        {
            HouseCard houseCard = new HouseCard();
            houseCard.HouseCardId = houseCardId;
            houseCard.Description = description;
            houseCard.CombatStrength = combatStrength;
            houseCard.SwordCount = swordCount;
            houseCard.TowerCount = towerCount;
            return houseCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseCardId
        {
            get
            {
                return _HouseCardId;
            }
            set
            {
                if (_HouseCardId != value)
                {
                    OnHouseCardIdChanging(value);
                    ReportPropertyChanging("HouseCardId");
                    _HouseCardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HouseCardId");
                    OnHouseCardIdChanged();
                }
            }
        }
        private global::System.Int32 _HouseCardId;
        partial void OnHouseCardIdChanging(global::System.Int32 value);
        partial void OnHouseCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CombatStrength
        {
            get
            {
                return _CombatStrength;
            }
            set
            {
                OnCombatStrengthChanging(value);
                ReportPropertyChanging("CombatStrength");
                _CombatStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CombatStrength");
                OnCombatStrengthChanged();
            }
        }
        private global::System.Int32 _CombatStrength;
        partial void OnCombatStrengthChanging(global::System.Int32 value);
        partial void OnCombatStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Speciality
        {
            get
            {
                return _Speciality;
            }
            set
            {
                OnSpecialityChanging(value);
                ReportPropertyChanging("Speciality");
                _Speciality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Speciality");
                OnSpecialityChanged();
            }
        }
        private global::System.String _Speciality;
        partial void OnSpecialityChanging(global::System.String value);
        partial void OnSpecialityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SwordCount
        {
            get
            {
                return _SwordCount;
            }
            set
            {
                OnSwordCountChanging(value);
                ReportPropertyChanging("SwordCount");
                _SwordCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwordCount");
                OnSwordCountChanged();
            }
        }
        private global::System.Int32 _SwordCount;
        partial void OnSwordCountChanging(global::System.Int32 value);
        partial void OnSwordCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TowerCount
        {
            get
            {
                return _TowerCount;
            }
            set
            {
                OnTowerCountChanging(value);
                ReportPropertyChanging("TowerCount");
                _TowerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TowerCount");
                OnTowerCountChanged();
            }
        }
        private global::System.Int32 _TowerCount;
        partial void OnTowerCountChanging(global::System.Int32 value);
        partial void OnTowerCountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CharacterHouseCard", "Character")]
        public Character Character
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Character>("Model.CharacterHouseCard", "Character").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Character>("Model.CharacterHouseCard", "Character").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Character> CharacterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Character>("Model.CharacterHouseCard", "Character");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Character>("Model.CharacterHouseCard", "Character", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="InfluenceTrackStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfluenceTrackStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfluenceTrackStatus object.
        /// </summary>
        /// <param name="influenceTrackId">Initial value of the InfluenceTrackId property.</param>
        /// <param name="ironThronePosition">Initial value of the IronThronePosition property.</param>
        /// <param name="fiefdomPosition">Initial value of the FiefdomPosition property.</param>
        /// <param name="kingsCourtPosition">Initial value of the KingsCourtPosition property.</param>
        /// <param name="gamePlayerId">Initial value of the GamePlayerId property.</param>
        public static InfluenceTrackStatus CreateInfluenceTrackStatus(global::System.Int64 influenceTrackId, global::System.Int32 ironThronePosition, global::System.Int32 fiefdomPosition, global::System.Int32 kingsCourtPosition, global::System.Int64 gamePlayerId)
        {
            InfluenceTrackStatus influenceTrackStatus = new InfluenceTrackStatus();
            influenceTrackStatus.InfluenceTrackId = influenceTrackId;
            influenceTrackStatus.IronThronePosition = ironThronePosition;
            influenceTrackStatus.FiefdomPosition = fiefdomPosition;
            influenceTrackStatus.KingsCourtPosition = kingsCourtPosition;
            influenceTrackStatus.GamePlayerId = gamePlayerId;
            return influenceTrackStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InfluenceTrackId
        {
            get
            {
                return _InfluenceTrackId;
            }
            set
            {
                if (_InfluenceTrackId != value)
                {
                    OnInfluenceTrackIdChanging(value);
                    ReportPropertyChanging("InfluenceTrackId");
                    _InfluenceTrackId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfluenceTrackId");
                    OnInfluenceTrackIdChanged();
                }
            }
        }
        private global::System.Int64 _InfluenceTrackId;
        partial void OnInfluenceTrackIdChanging(global::System.Int64 value);
        partial void OnInfluenceTrackIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IronThronePosition
        {
            get
            {
                return _IronThronePosition;
            }
            set
            {
                OnIronThronePositionChanging(value);
                ReportPropertyChanging("IronThronePosition");
                _IronThronePosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IronThronePosition");
                OnIronThronePositionChanged();
            }
        }
        private global::System.Int32 _IronThronePosition;
        partial void OnIronThronePositionChanging(global::System.Int32 value);
        partial void OnIronThronePositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiefdomPosition
        {
            get
            {
                return _FiefdomPosition;
            }
            set
            {
                OnFiefdomPositionChanging(value);
                ReportPropertyChanging("FiefdomPosition");
                _FiefdomPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiefdomPosition");
                OnFiefdomPositionChanged();
            }
        }
        private global::System.Int32 _FiefdomPosition;
        partial void OnFiefdomPositionChanging(global::System.Int32 value);
        partial void OnFiefdomPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KingsCourtPosition
        {
            get
            {
                return _KingsCourtPosition;
            }
            set
            {
                OnKingsCourtPositionChanging(value);
                ReportPropertyChanging("KingsCourtPosition");
                _KingsCourtPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KingsCourtPosition");
                OnKingsCourtPositionChanged();
            }
        }
        private global::System.Int32 _KingsCourtPosition;
        partial void OnKingsCourtPositionChanging(global::System.Int32 value);
        partial void OnKingsCourtPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GamePlayerId
        {
            get
            {
                return _GamePlayerId;
            }
            set
            {
                OnGamePlayerIdChanging(value);
                ReportPropertyChanging("GamePlayerId");
                _GamePlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamePlayerId");
                OnGamePlayerIdChanged();
            }
        }
        private global::System.Int64 _GamePlayerId;
        partial void OnGamePlayerIdChanging(global::System.Int64 value);
        partial void OnGamePlayerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundInfluenceTrackStatus", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundInfluenceTrackStatus", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundInfluenceTrackStatus", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundInfluenceTrackStatus", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.RoundInfluenceTrackStatus", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Move")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Move : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Move object.
        /// </summary>
        /// <param name="moveId">Initial value of the MoveId property.</param>
        /// <param name="attackerFootmanCount">Initial value of the AttackerFootmanCount property.</param>
        /// <param name="attackerKnightCount">Initial value of the AttackerKnightCount property.</param>
        /// <param name="attackerShipCount">Initial value of the AttackerShipCount property.</param>
        /// <param name="attackerSiegeCount">Initial value of the AttackerSiegeCount property.</param>
        /// <param name="attackerVictory">Initial value of the AttackerVictory property.</param>
        /// <param name="attackerGamePlayerId">Initial value of the AttackerGamePlayerId property.</param>
        /// <param name="fromRegionId">Initial value of the FromRegionId property.</param>
        /// <param name="toRegionId">Initial value of the ToRegionId property.</param>
        public static Move CreateMove(global::System.Int64 moveId, global::System.Int32 attackerFootmanCount, global::System.Int32 attackerKnightCount, global::System.Int32 attackerShipCount, global::System.Int32 attackerSiegeCount, global::System.Boolean attackerVictory, global::System.Int64 attackerGamePlayerId, global::System.Int64 fromRegionId, global::System.Int64 toRegionId)
        {
            Move move = new Move();
            move.MoveId = moveId;
            move.AttackerFootmanCount = attackerFootmanCount;
            move.AttackerKnightCount = attackerKnightCount;
            move.AttackerShipCount = attackerShipCount;
            move.AttackerSiegeCount = attackerSiegeCount;
            move.AttackerVictory = attackerVictory;
            move.AttackerGamePlayerId = attackerGamePlayerId;
            move.FromRegionId = fromRegionId;
            move.ToRegionId = toRegionId;
            return move;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MoveId
        {
            get
            {
                return _MoveId;
            }
            set
            {
                if (_MoveId != value)
                {
                    OnMoveIdChanging(value);
                    ReportPropertyChanging("MoveId");
                    _MoveId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MoveId");
                    OnMoveIdChanged();
                }
            }
        }
        private global::System.Int64 _MoveId;
        partial void OnMoveIdChanging(global::System.Int64 value);
        partial void OnMoveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttackerFootmanCount
        {
            get
            {
                return _AttackerFootmanCount;
            }
            set
            {
                OnAttackerFootmanCountChanging(value);
                ReportPropertyChanging("AttackerFootmanCount");
                _AttackerFootmanCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerFootmanCount");
                OnAttackerFootmanCountChanged();
            }
        }
        private global::System.Int32 _AttackerFootmanCount;
        partial void OnAttackerFootmanCountChanging(global::System.Int32 value);
        partial void OnAttackerFootmanCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttackerKnightCount
        {
            get
            {
                return _AttackerKnightCount;
            }
            set
            {
                OnAttackerKnightCountChanging(value);
                ReportPropertyChanging("AttackerKnightCount");
                _AttackerKnightCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerKnightCount");
                OnAttackerKnightCountChanged();
            }
        }
        private global::System.Int32 _AttackerKnightCount;
        partial void OnAttackerKnightCountChanging(global::System.Int32 value);
        partial void OnAttackerKnightCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttackerShipCount
        {
            get
            {
                return _AttackerShipCount;
            }
            set
            {
                OnAttackerShipCountChanging(value);
                ReportPropertyChanging("AttackerShipCount");
                _AttackerShipCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerShipCount");
                OnAttackerShipCountChanged();
            }
        }
        private global::System.Int32 _AttackerShipCount;
        partial void OnAttackerShipCountChanging(global::System.Int32 value);
        partial void OnAttackerShipCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttackerSiegeCount
        {
            get
            {
                return _AttackerSiegeCount;
            }
            set
            {
                OnAttackerSiegeCountChanging(value);
                ReportPropertyChanging("AttackerSiegeCount");
                _AttackerSiegeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerSiegeCount");
                OnAttackerSiegeCountChanged();
            }
        }
        private global::System.Int32 _AttackerSiegeCount;
        partial void OnAttackerSiegeCountChanging(global::System.Int32 value);
        partial void OnAttackerSiegeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttackerBattleCardStrength
        {
            get
            {
                return _AttackerBattleCardStrength;
            }
            set
            {
                OnAttackerBattleCardStrengthChanging(value);
                ReportPropertyChanging("AttackerBattleCardStrength");
                _AttackerBattleCardStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerBattleCardStrength");
                OnAttackerBattleCardStrengthChanged();
            }
        }
        private Nullable<global::System.Int32> _AttackerBattleCardStrength;
        partial void OnAttackerBattleCardStrengthChanging(Nullable<global::System.Int32> value);
        partial void OnAttackerBattleCardStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefenderBattleCardStrength
        {
            get
            {
                return _DefenderBattleCardStrength;
            }
            set
            {
                OnDefenderBattleCardStrengthChanging(value);
                ReportPropertyChanging("DefenderBattleCardStrength");
                _DefenderBattleCardStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefenderBattleCardStrength");
                OnDefenderBattleCardStrengthChanged();
            }
        }
        private Nullable<global::System.Int32> _DefenderBattleCardStrength;
        partial void OnDefenderBattleCardStrengthChanging(Nullable<global::System.Int32> value);
        partial void OnDefenderBattleCardStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AttackerVictory
        {
            get
            {
                return _AttackerVictory;
            }
            set
            {
                OnAttackerVictoryChanging(value);
                ReportPropertyChanging("AttackerVictory");
                _AttackerVictory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerVictory");
                OnAttackerVictoryChanged();
            }
        }
        private global::System.Boolean _AttackerVictory;
        partial void OnAttackerVictoryChanging(global::System.Boolean value);
        partial void OnAttackerVictoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AttackerHouseCardId
        {
            get
            {
                return _AttackerHouseCardId;
            }
            set
            {
                OnAttackerHouseCardIdChanging(value);
                ReportPropertyChanging("AttackerHouseCardId");
                _AttackerHouseCardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerHouseCardId");
                OnAttackerHouseCardIdChanged();
            }
        }
        private Nullable<global::System.Int64> _AttackerHouseCardId;
        partial void OnAttackerHouseCardIdChanging(Nullable<global::System.Int64> value);
        partial void OnAttackerHouseCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DefenderHouseCardId
        {
            get
            {
                return _DefenderHouseCardId;
            }
            set
            {
                OnDefenderHouseCardIdChanging(value);
                ReportPropertyChanging("DefenderHouseCardId");
                _DefenderHouseCardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefenderHouseCardId");
                OnDefenderHouseCardIdChanged();
            }
        }
        private Nullable<global::System.Int64> _DefenderHouseCardId;
        partial void OnDefenderHouseCardIdChanging(Nullable<global::System.Int64> value);
        partial void OnDefenderHouseCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AttackerGamePlayerId
        {
            get
            {
                return _AttackerGamePlayerId;
            }
            set
            {
                OnAttackerGamePlayerIdChanging(value);
                ReportPropertyChanging("AttackerGamePlayerId");
                _AttackerGamePlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttackerGamePlayerId");
                OnAttackerGamePlayerIdChanged();
            }
        }
        private global::System.Int64 _AttackerGamePlayerId;
        partial void OnAttackerGamePlayerIdChanging(global::System.Int64 value);
        partial void OnAttackerGamePlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FromRegionId
        {
            get
            {
                return _FromRegionId;
            }
            set
            {
                OnFromRegionIdChanging(value);
                ReportPropertyChanging("FromRegionId");
                _FromRegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromRegionId");
                OnFromRegionIdChanged();
            }
        }
        private global::System.Int64 _FromRegionId;
        partial void OnFromRegionIdChanging(global::System.Int64 value);
        partial void OnFromRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ToRegionId
        {
            get
            {
                return _ToRegionId;
            }
            set
            {
                OnToRegionIdChanging(value);
                ReportPropertyChanging("ToRegionId");
                _ToRegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToRegionId");
                OnToRegionIdChanged();
            }
        }
        private global::System.Int64 _ToRegionId;
        partial void OnToRegionIdChanging(global::System.Int64 value);
        partial void OnToRegionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundMove", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundMove", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundMove", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundMove", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.RoundMove", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Player CreatePlayer(global::System.Int32 playerId, global::System.String firstName, global::System.String lastName)
        {
            Player player = new Player();
            player.PlayerId = playerId;
            player.FirstName = firstName;
            player.LastName = lastName;
            return player;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                if (_PlayerId != value)
                {
                    OnPlayerIdChanging(value);
                    ReportPropertyChanging("PlayerId");
                    _PlayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerId");
                    OnPlayerIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlayerTrophy", "Trophy")]
        public EntityCollection<Trophy> Trophys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trophy>("Model.PlayerTrophy", "Trophy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trophy>("Model.PlayerTrophy", "Trophy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="supplyCount">Initial value of the SupplyCount property.</param>
        /// <param name="hasConsolidatePower">Initial value of the HasConsolidatePower property.</param>
        /// <param name="hasPort">Initial value of the HasPort property.</param>
        /// <param name="isStronghold">Initial value of the IsStronghold property.</param>
        /// <param name="isCastle">Initial value of the IsCastle property.</param>
        public static Region CreateRegion(global::System.Int64 regionId, global::System.String name, global::System.Int32 supplyCount, global::System.Boolean hasConsolidatePower, global::System.Boolean hasPort, global::System.Boolean isStronghold, global::System.Boolean isCastle)
        {
            Region region = new Region();
            region.RegionId = regionId;
            region.Name = name;
            region.SupplyCount = supplyCount;
            region.HasConsolidatePower = hasConsolidatePower;
            region.HasPort = hasPort;
            region.IsStronghold = isStronghold;
            region.IsCastle = isCastle;
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int64 _RegionId;
        partial void OnRegionIdChanging(global::System.Int64 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplyCount
        {
            get
            {
                return _SupplyCount;
            }
            set
            {
                OnSupplyCountChanging(value);
                ReportPropertyChanging("SupplyCount");
                _SupplyCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplyCount");
                OnSupplyCountChanged();
            }
        }
        private global::System.Int32 _SupplyCount;
        partial void OnSupplyCountChanging(global::System.Int32 value);
        partial void OnSupplyCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasConsolidatePower
        {
            get
            {
                return _HasConsolidatePower;
            }
            set
            {
                OnHasConsolidatePowerChanging(value);
                ReportPropertyChanging("HasConsolidatePower");
                _HasConsolidatePower = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasConsolidatePower");
                OnHasConsolidatePowerChanged();
            }
        }
        private global::System.Boolean _HasConsolidatePower;
        partial void OnHasConsolidatePowerChanging(global::System.Boolean value);
        partial void OnHasConsolidatePowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasPort
        {
            get
            {
                return _HasPort;
            }
            set
            {
                OnHasPortChanging(value);
                ReportPropertyChanging("HasPort");
                _HasPort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasPort");
                OnHasPortChanged();
            }
        }
        private global::System.Boolean _HasPort;
        partial void OnHasPortChanging(global::System.Boolean value);
        partial void OnHasPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsStronghold
        {
            get
            {
                return _IsStronghold;
            }
            set
            {
                OnIsStrongholdChanging(value);
                ReportPropertyChanging("IsStronghold");
                _IsStronghold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsStronghold");
                OnIsStrongholdChanged();
            }
        }
        private global::System.Boolean _IsStronghold;
        partial void OnIsStrongholdChanging(global::System.Boolean value);
        partial void OnIsStrongholdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCastle
        {
            get
            {
                return _IsCastle;
            }
            set
            {
                OnIsCastleChanging(value);
                ReportPropertyChanging("IsCastle");
                _IsCastle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCastle");
                OnIsCastleChanged();
            }
        }
        private global::System.Boolean _IsCastle;
        partial void OnIsCastleChanging(global::System.Boolean value);
        partial void OnIsCastleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RegionStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegionStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegionStatus object.
        /// </summary>
        /// <param name="regionStatusId">Initial value of the RegionStatusId property.</param>
        /// <param name="orderToken">Initial value of the OrderToken property.</param>
        /// <param name="footmanCount">Initial value of the FootmanCount property.</param>
        /// <param name="knightCount">Initial value of the KnightCount property.</param>
        /// <param name="shipCount">Initial value of the ShipCount property.</param>
        /// <param name="siegeCount">Initial value of the SiegeCount property.</param>
        /// <param name="controlledByGamePlayerId">Initial value of the ControlledByGamePlayerId property.</param>
        public static RegionStatus CreateRegionStatus(global::System.Int64 regionStatusId, global::System.String orderToken, global::System.Int32 footmanCount, global::System.Int32 knightCount, global::System.Int32 shipCount, global::System.Int32 siegeCount, global::System.Int64 controlledByGamePlayerId)
        {
            RegionStatus regionStatus = new RegionStatus();
            regionStatus.RegionStatusId = regionStatusId;
            regionStatus.OrderToken = orderToken;
            regionStatus.FootmanCount = footmanCount;
            regionStatus.KnightCount = knightCount;
            regionStatus.ShipCount = shipCount;
            regionStatus.SiegeCount = siegeCount;
            regionStatus.ControlledByGamePlayerId = controlledByGamePlayerId;
            return regionStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegionStatusId
        {
            get
            {
                return _RegionStatusId;
            }
            set
            {
                if (_RegionStatusId != value)
                {
                    OnRegionStatusIdChanging(value);
                    ReportPropertyChanging("RegionStatusId");
                    _RegionStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionStatusId");
                    OnRegionStatusIdChanged();
                }
            }
        }
        private global::System.Int64 _RegionStatusId;
        partial void OnRegionStatusIdChanging(global::System.Int64 value);
        partial void OnRegionStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderToken
        {
            get
            {
                return _OrderToken;
            }
            set
            {
                OnOrderTokenChanging(value);
                ReportPropertyChanging("OrderToken");
                _OrderToken = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderToken");
                OnOrderTokenChanged();
            }
        }
        private global::System.String _OrderToken;
        partial void OnOrderTokenChanging(global::System.String value);
        partial void OnOrderTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FootmanCount
        {
            get
            {
                return _FootmanCount;
            }
            set
            {
                OnFootmanCountChanging(value);
                ReportPropertyChanging("FootmanCount");
                _FootmanCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FootmanCount");
                OnFootmanCountChanged();
            }
        }
        private global::System.Int32 _FootmanCount;
        partial void OnFootmanCountChanging(global::System.Int32 value);
        partial void OnFootmanCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KnightCount
        {
            get
            {
                return _KnightCount;
            }
            set
            {
                OnKnightCountChanging(value);
                ReportPropertyChanging("KnightCount");
                _KnightCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KnightCount");
                OnKnightCountChanged();
            }
        }
        private global::System.Int32 _KnightCount;
        partial void OnKnightCountChanging(global::System.Int32 value);
        partial void OnKnightCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShipCount
        {
            get
            {
                return _ShipCount;
            }
            set
            {
                OnShipCountChanging(value);
                ReportPropertyChanging("ShipCount");
                _ShipCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShipCount");
                OnShipCountChanged();
            }
        }
        private global::System.Int32 _ShipCount;
        partial void OnShipCountChanging(global::System.Int32 value);
        partial void OnShipCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiegeCount
        {
            get
            {
                return _SiegeCount;
            }
            set
            {
                OnSiegeCountChanging(value);
                ReportPropertyChanging("SiegeCount");
                _SiegeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiegeCount");
                OnSiegeCountChanged();
            }
        }
        private global::System.Int32 _SiegeCount;
        partial void OnSiegeCountChanging(global::System.Int32 value);
        partial void OnSiegeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ControlledByGamePlayerId
        {
            get
            {
                return _ControlledByGamePlayerId;
            }
            set
            {
                OnControlledByGamePlayerIdChanging(value);
                ReportPropertyChanging("ControlledByGamePlayerId");
                _ControlledByGamePlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ControlledByGamePlayerId");
                OnControlledByGamePlayerIdChanged();
            }
        }
        private global::System.Int64 _ControlledByGamePlayerId;
        partial void OnControlledByGamePlayerIdChanging(global::System.Int64 value);
        partial void OnControlledByGamePlayerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RegionRegionStatus", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionStatus", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionStatus", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Model.RegionRegionStatus", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("Model.RegionRegionStatus", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundRegionStatus", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundRegionStatus", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundRegionStatus", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.RoundRegionStatus", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.RoundRegionStatus", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Round object.
        /// </summary>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="roundNumber">Initial value of the RoundNumber property.</param>
        /// <param name="wildlingsCount">Initial value of the WildlingsCount property.</param>
        /// <param name="restriction">Initial value of the Restriction property.</param>
        /// <param name="wildlingsAttack">Initial value of the WildlingsAttack property.</param>
        /// <param name="wildlingsVictory">Initial value of the WildlingsVictory property.</param>
        public static Round CreateRound(global::System.Int64 roundId, global::System.Int32 roundNumber, global::System.Int32 wildlingsCount, global::System.String restriction, global::System.Boolean wildlingsAttack, global::System.Boolean wildlingsVictory)
        {
            Round round = new Round();
            round.RoundId = roundId;
            round.RoundNumber = roundNumber;
            round.WildlingsCount = wildlingsCount;
            round.Restriction = restriction;
            round.WildlingsAttack = wildlingsAttack;
            round.WildlingsVictory = wildlingsVictory;
            return round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int64 _RoundId;
        partial void OnRoundIdChanging(global::System.Int64 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundNumber
        {
            get
            {
                return _RoundNumber;
            }
            set
            {
                OnRoundNumberChanging(value);
                ReportPropertyChanging("RoundNumber");
                _RoundNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoundNumber");
                OnRoundNumberChanged();
            }
        }
        private global::System.Int32 _RoundNumber;
        partial void OnRoundNumberChanging(global::System.Int32 value);
        partial void OnRoundNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WildlingsCount
        {
            get
            {
                return _WildlingsCount;
            }
            set
            {
                OnWildlingsCountChanging(value);
                ReportPropertyChanging("WildlingsCount");
                _WildlingsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WildlingsCount");
                OnWildlingsCountChanged();
            }
        }
        private global::System.Int32 _WildlingsCount;
        partial void OnWildlingsCountChanging(global::System.Int32 value);
        partial void OnWildlingsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Restriction
        {
            get
            {
                return _Restriction;
            }
            set
            {
                OnRestrictionChanging(value);
                ReportPropertyChanging("Restriction");
                _Restriction = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Restriction");
                OnRestrictionChanged();
            }
        }
        private global::System.String _Restriction;
        partial void OnRestrictionChanging(global::System.String value);
        partial void OnRestrictionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WildlingsAttack
        {
            get
            {
                return _WildlingsAttack;
            }
            set
            {
                OnWildlingsAttackChanging(value);
                ReportPropertyChanging("WildlingsAttack");
                _WildlingsAttack = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WildlingsAttack");
                OnWildlingsAttackChanged();
            }
        }
        private global::System.Boolean _WildlingsAttack;
        partial void OnWildlingsAttackChanging(global::System.Boolean value);
        partial void OnWildlingsAttackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WildlingsVictory
        {
            get
            {
                return _WildlingsVictory;
            }
            set
            {
                OnWildlingsVictoryChanging(value);
                ReportPropertyChanging("WildlingsVictory");
                _WildlingsVictory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WildlingsVictory");
                OnWildlingsVictoryChanged();
            }
        }
        private global::System.Boolean _WildlingsVictory;
        partial void OnWildlingsVictoryChanging(global::System.Boolean value);
        partial void OnWildlingsVictoryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GameRound", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameRound", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameRound", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Model.GameRound", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("Model.GameRound", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundRegionStatus", "RegionStatus")]
        public RegionStatus RegionStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionStatus>("Model.RoundRegionStatus", "RegionStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionStatus>("Model.RoundRegionStatus", "RegionStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionStatus> RegionStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionStatus>("Model.RoundRegionStatus", "RegionStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionStatus>("Model.RoundRegionStatus", "RegionStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundMove", "Move")]
        public EntityCollection<Move> Moves
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Move>("Model.RoundMove", "Move");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Move>("Model.RoundMove", "Move", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoundInfluenceTrackStatus", "InfluenceTrackStatus")]
        public InfluenceTrackStatus InfluenceTrackStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfluenceTrackStatus>("Model.RoundInfluenceTrackStatus", "InfluenceTrackStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfluenceTrackStatus>("Model.RoundInfluenceTrackStatus", "InfluenceTrackStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfluenceTrackStatus> InfluenceTrackStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfluenceTrackStatus>("Model.RoundInfluenceTrackStatus", "InfluenceTrackStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfluenceTrackStatus>("Model.RoundInfluenceTrackStatus", "InfluenceTrackStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Trophy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trophy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trophy object.
        /// </summary>
        /// <param name="trophyId">Initial value of the TrophyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Trophy CreateTrophy(global::System.Int32 trophyId, global::System.String name, global::System.String description)
        {
            Trophy trophy = new Trophy();
            trophy.TrophyId = trophyId;
            trophy.Name = name;
            trophy.Description = description;
            return trophy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrophyId
        {
            get
            {
                return _TrophyId;
            }
            set
            {
                if (_TrophyId != value)
                {
                    OnTrophyIdChanging(value);
                    ReportPropertyChanging("TrophyId");
                    _TrophyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrophyId");
                    OnTrophyIdChanged();
                }
            }
        }
        private global::System.Int32 _TrophyId;
        partial void OnTrophyIdChanging(global::System.Int32 value);
        partial void OnTrophyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlayerTrophy", "Player")]
        public EntityCollection<Player> Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Player>("Model.PlayerTrophy", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Player>("Model.PlayerTrophy", "Player", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
